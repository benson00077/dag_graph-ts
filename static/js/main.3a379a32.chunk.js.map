{"version":3,"sources":["components/TogglerButton/styles.ts","components/TogglerButton/ToggleButton.tsx","components/styles/global.ts","components/styles/themes.ts","components/contexts/ThemeContext.tsx","components/contexts/PositionContext.tsx","dag/graphClass.ts","dag/dagClass.ts","components/utils/inputParser.ts","components/contexts/DagContext.tsx","components/utils/arrowsInfoGetter.ts","components/utils/svgPathHandler.ts","components/hooks/useDrawSVGConnector.ts","components/Arrow/Arrow.tsx","components/ArrowRenderer.tsx","components/Vertex/styles.ts","components/Draggble/domFns.ts","components/Draggble/positionFns.ts","components/Draggble/DraggableCore.tsx","components/Draggble/Draggable.tsx","components/hooks/useCancellablePromises.ts","components/utils/cancellablePromise.ts","components/Vertex/Rename.tsx","components/Vertex/Vertex.tsx","components/VertexRenderer.tsx","components/SelectArrowStyle/style.ts","components/SelectArrowStyle/SelectArrowStyle.tsx","components/DrawGraph.tsx","components/DeleteVertex/style.ts","components/DeleteVertex/DeleteVertex.tsx","components/InputForm/styles.ts","components/InputForm/VertexInput.tsx","components/ResetDag/style.ts","components/ResetDag/ResetDag.tsx","components/GraphMiddleWare.tsx","App.tsx","components/hooks/useThemeMode.ts","components/hooks/useDagStorage.ts","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","theme","background","text","Icons","span","TogglerButton","themeToggler","htmlFor","className","id","type","onClick","onChange","checked","window","localStorage","getItem","style","marginLeft","height","size","globalStyle","createGlobalStyle","withTheme","darkTheme","button","vertexbg","select","option","lightTheme","ThemeContext","children","themeMode","PositionContext","React","createContext","PositionContextProvider","props","useState","positionMap","setPositionMap","Provider","value","Graph","rank","topSorted","result","vertex","path","push","name","this","leafToRoot","reverse","ranking","forEach","i","incomingNames","vertices","nextName","includes","deleteName","filter","item","deleteNameKey","incoming","outGoingMap","Object","entries","from","undefined","length","names","topologySortCaller","visit_giveRank","getOutgoingMap","vertexName","outgoingList","hasOutgoing","deleteFromIncomingArr","deleteFromIncoming","giveRank","hasOwnProperty","add","fn","visited","incomingName","visit","pop","fromName","toName","to","Error","join","before","after","map","addEdge","Array","isArray","beforeName","afterName","seperate","str","split","arrTrim","arr","each","trim","DagContext","DagContextProvider","setlocalStorage","update","setUpdate","dag","_setDag","setDag","createVertex","input","alert","verticesInput","incomming","outgoing","outgoingArr","inputParser","addEdges","err","updateDagLocalStorage","deleteVertex","delete","appendVertexValue","resetDag","mapStr","JSON","stringify","useEffect","prevDagData","parse","console","log","repaintPrevDag","arrowsInfoGetter","counter","incommingName","j","SvgPath","ele","command","getAttribute","pathPara","setAttribute","SvgPathEnds","divs","endFrom","x","offsetLeft","y","offsetTop","offsetHeight","endTo","getTrans","number","offsetWidth","getPosnTopButtonEnds","getStraightCommand","moveFrom","LineTo","getPosnLeftEnds","getCurvePathCommand","controlPoint1","controlPoint2","moveTo","CurvesPara","StraightPara","transform","transArr","replace","percentage","useDrawConnectorDynamic","styleOpt","defaultPathMemoizer","drawConnectorDynamic","arrowsRef","translate","arrowRef","indicator","pathRef","current","newPathCommand","prevCommand","prevPara","curvePara","getNewCurvesPathCommnadAfterDrag","straightPara","getNewStraightPathCommandAfterDrag","mount","Arrow","arrowStyleOpt","forwardedRef","forwardedDivsRef","useContext","drawConnectorInitial","ends","pathCommand","getCurveCommand","getStraitCommand","relatedDivs","relatedDivsChecker","fill","stroke","strokeWidth","markerEnd","ref","arrowRenderer","refs","divsRefs","arrowsRefs","arrowsRecord","arrowsNumber","e","posn","top","left","addEvent","event","handler","inputOptions","options","capture","addEventListener","removeEvent","removeEventListener","withControlledNodeRef","node","addUserSelectStyles","doc","el","styleEl","getElementById","createElement","innerHTML","getElementsByTagName","appendChild","body","classList","match","RegExp","removeUserSelectStyles","remove","selection","defaultView","getSelection","removeAllRanges","canDragY","axis","getControlPosition","evt","offsetParent","offsetParentRect","ownerDocument","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","offsetXYFromParent","createCoreData","state","lastX","lastY","deltaX","deltaY","createDraggableData","draggableState","scale","coreData","eventsFor","start","move","stop","dragEventFor","DraggableCore","args","allowAnyClick","disabled","enableUserSelectHack","onStart","onDrag","onStop","onMouseDown","dragging","NaN","setState","handleDragStart","thisNode","position","coreEvent","handleDrag","prev","handleDragStop","MouseEvent","document","createEvent","initMouseEvent","passive","Draggable","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","defaultPosition","positionOffset","dragged","draggable","Boolean","validPosition","contorlPos","translation","unitSuffix","defaultX","defaultY","getTranslation","createCSSTransform","uiData","newState","cloneElement","Children","only","useClickPreventionOnDoubleClick","onDoubleClick","api","pendingPromises","useRef","appendPendingPromise","promise","removePendingPromise","p","clearPendingPromise","cancel","useCancellablePromises","n","waitForClick","isCanceled","Promise","resolve","reject","then","error","cancellablePromise","setTimeout","catch","errInfo","Rename","initName","setValue","formInputField","focus","setSelectionRange","handleClick","handleDoubleClick","width","onSubmit","preventDefault","blur","target","preventSelect","Vertex","location","forwardedArrowsRefs","topPosition","leftPosition","activeDrags","deltaPosition","controlledPosition","relatedArrows","arrow","pathEle","relatedArrowsDetector","dragHandlers","ui","vertexRenderer","graphHeight","rowProcssedTimes","refsDivs","refsArrows","row","column","Dropdown","dropDownHeight","optionsHeight","SelectArrowStyle","setStyleOpt","showOptions","setShowOptions","mouseDownEffect","currentTarget","mouseUpEffect","contains","onMouseEnter","onMouseLeave","onMouseUp","xmlns","viewBox","refX","refY","markerWidth","markerHeight","orient","d","DrawGraph","createRef","setArrowStyleOpt","Form","form","DeleteVertex","setTarget","placeholder","Vertex_input","Button","VertexInput","setVertex","setIncomming","setOutgoing","btn","Icon","toolTip","show","ResetDag","reset","showTip","setShowTip","mouseDownHandler","icon","mouseUpHandler","GraphMiddleWare","App","setTheme","setMode","mode","setItem","localTheme","useThemeMode","dagStorage","setDagStorage","localDagStorage","dagData","useDagStorage","href","rel","opacity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a379a32.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 4rem;\r\n    height: 1.5rem;\r\n  }\r\n\r\n  .switch input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: ${({ theme }) => theme.background};\r\n    -webkit-transition: 0.2s;\r\n    transition: 0.2s;\r\n    box-shadow: 0 0 2px ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 14px;\r\n    width: 14px;\r\n    left: 7px;\r\n    bottom: 5px;\r\n    background-color: ${({ theme }) => theme.background};\r\n    -webkit-transition: 0.2s;\r\n    transition: 0.2s;\r\n  }\r\n\r\n  input:checked + .slider {\r\n    background-color: ${({theme}) => theme.background};\r\n  }\r\n\r\n  input:checked + .slider:before {\r\n    -webkit-transform: translateY(35px);\r\n    -ms-transform: translateX(35px);\r\n    transform: translateX(35px);\r\n  } \r\n\r\n  /* Rounded sliders */\r\n  .slider.round {\r\n    border-radius: 34px;\r\n  }\r\n\r\n  .slider.round:before {\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.span`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  top: 25%;\r\n  align-items: center;\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.text};\r\n    z-index: 11;\r\n  }\r\n`;\r\n","import { HiMoon } from \"react-icons/hi\";\r\nimport { FaSun } from \"react-icons/fa\";\r\nimport * as S from \"./styles\";\r\n\r\ntype ThemeTogglerProps = {\r\n  themeToggler: () => void;\r\n};\r\n\r\nfunction TogglerButton({ themeToggler }: ThemeTogglerProps) {\r\n  return (\r\n    <S.Container>\r\n      <label htmlFor=\"checkbox\" className=\"switch\">\r\n        <input\r\n          id=\"checkbox\"\r\n          type=\"checkbox\"\r\n          onClick={themeToggler}\r\n          onChange={() => false}\r\n          checked={window.localStorage.getItem(\"theme\") === \"light\"}\r\n        />\r\n        <S.Icons className=\"slider round\">\r\n          {window.localStorage.getItem(\"theme\") !== \"light\" ? (\r\n            <>\r\n              <HiMoon style={{ marginLeft: \"6.3px\", height: \"10px\" }} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaSun size={0} style={{ marginLeft: \"41px\", height: \"10px\" }} />\r\n            </>\r\n          )}\r\n        </S.Icons>\r\n      </label>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default TogglerButton;\r\n","import { createGlobalStyle, withTheme } from \"styled-components\";\r\nimport { ThemeProps } from \"./themes\";\r\n\r\ntype GlobalThemeProps = {\r\n  theme: ThemeProps;\r\n}\r\n\r\nconst globalStyle = createGlobalStyle`\r\n  :root {\r\n    //dark-mode\r\n    --dark-background: #1A1B27;\r\n    --dark-text: #F5F5F7;\r\n    --dark-button: rgba(0, 0, 0, 0.25);\r\n    --dark-vertexbg: #a371f7;\r\n    --dark-select: rgba(0, 0, 0, 0.25);\r\n    --dark-option: rgba(0, 0, 0, 0.9);\r\n\r\n    //light-mode\r\n    --light-background: #E7EAED; //#f2f2f2;\r\n    --light-text: #2E0509;\r\n    --light-button: rgba( 7,  89, 133, 0.35 ); //#007aff;\r\n    --light-vertexbg: #007aff;\r\n    --light-select: rgba( 7,  89, 133, 0.35 );\r\n    --light-option: rgba( 7,  89, 133, 0.9 ); //rgba(255, 255, 255, 0.9);\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    outline: 0;\r\n  }\r\n\r\n  html body {\r\n    -webkit-font-smoothing: antialiased;\r\n    font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\r\n    font-weight: 500;\r\n    height: 100vh;\r\n    width: 85vw;\r\n    margin: 0 auto;\r\n    background-color: ${( {theme}: GlobalThemeProps) => theme.background};\r\n  }\r\n\r\n  .toggler {\r\n    position: absolute;\r\n    right: 1rem;\r\n    top: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    h1 {\r\n      font-size: 1.5rem; //3.375rem;\r\n      color: ${( {theme}: GlobalThemeProps ) => theme.text}\r\n    }\r\n\r\n    & > a svg {\r\n      color: ${( {theme}: GlobalThemeProps ) => theme.text};\r\n    }\r\n  }\r\n\r\n  .instructions {\r\n    padding: 1rem 0 1rem 0;\r\n    color: ${( {theme}: GlobalThemeProps ) => theme.text}\r\n  }\r\n\r\n  .graph-wrapper {\r\n    position: relative;\r\n    height: 85vh;\r\n    border: solid 1px black;\r\n    border-radius: 15px;\r\n\r\n    svg{\r\n      position: absolute;\r\n      height: 100%; // temp\r\n      width: 100%;\r\n    \r\n      marker#arrowhead {\r\n        fill: ${( {theme} ) => theme.text}\r\n      }\r\n\r\n      & g {\r\n        stroke: ${( {theme} ) => theme.text}\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default withTheme(globalStyle)","export interface ThemeProps {\r\n  background: string;\r\n  text: string;\r\n  button: string;\r\n  vertexbg: string;\r\n  select: string;\r\n  option: string;\r\n}\r\n\r\nexport const darkTheme: ThemeProps = {\r\n  background: 'var(--dark-background)',\r\n  text: 'var(--dark-text)',\r\n  button: 'var(--dark-button)',\r\n  vertexbg: 'var(--dark-vertexbg)',\r\n  select: 'var(--dark-select)',\r\n  option: 'var(--dark-option)',\r\n}\r\n\r\nexport const lightTheme: ThemeProps = {\r\n  background: 'var(--light-background)',\r\n  text: 'var(--light-text)',\r\n  button: 'var(--light-button)',\r\n  vertexbg: 'var(--light-vertexbg)',\r\n  select: 'var(--light-select)',\r\n  option: 'var(--light-option)',\r\n}","// https://dev.to/viniciusmdias/how-to-create-a-theme-in-react-typescript-with-styled-components-3fn\r\n\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from '../styles/themes';\r\n\r\ntype ThemeContextProps = {\r\n  theme: string,\r\n  children: React.ReactNode\r\n}\r\n\r\nconst ThemeContext = ({ theme, children }: ThemeContextProps) => {\r\n\r\n  const themeMode = theme === 'dark' ? darkTheme : lightTheme;\r\n\r\n  return <ThemeProvider theme={themeMode}>{children}</ThemeProvider>\r\n};\r\n\r\nexport default ThemeContext","import React, { useState } from \"react\";\r\nimport { contextProps } from \"./types\"\r\n\r\ntype posnMap = {\r\n  [vertex: string]: {\r\n    posnOrigin: [number, number],\r\n    posnNew: [number, number],\r\n    translate: { x: number, y: number }\r\n  }\r\n}\r\n\r\ntype posnCtx = [posnMap, React.Dispatch<React.SetStateAction<posnMap>> | (() => {})]\r\n// (posnMap | React.Dispatch<React.SetStateAction<posnMap>>)[]\r\n// [posnMap, React.Dispatch<React.SetStateAction<posnMap>>]\r\n\r\nexport const PositionContext = React.createContext<posnCtx>([{}, () => {}]);\r\n\r\nexport const PositionContextProvider = (props: contextProps) => {\r\n  const [positionMap, setPositionMap] = useState<posnMap>({})\r\n\r\n  return (\r\n    <PositionContext.Provider value={[positionMap, setPositionMap]}>\r\n      {props.children}\r\n    </PositionContext.Provider>\r\n  )\r\n}\r\n","import Dag from './dagClass'\r\nimport { IdagData, Vertex } from './types'\r\n\r\n\r\nexport default class Graph extends Dag implements IdagData {\r\n  rank: {\r\n    [name: string] : number\r\n  }\r\n  topSorted: string[]\r\n\r\n  constructor() {\r\n    super()\r\n    this.rank = {}\r\n    this.topSorted = []\r\n  }\r\n\r\n  private topologySortCaller() {\r\n    let result: string[] = []\r\n    super.topsort((vertex, path) => {\r\n      result.push(vertex.name)\r\n    })\r\n    this.topSorted = result\r\n    return result\r\n  }\r\n\r\n  private visit_giveRank() {\r\n    let leafToRoot = [...this.topSorted].reverse()\r\n    let ranking = 0\r\n    leafToRoot.forEach((name, i) => {\r\n      let incomingNames = [...this.vertices[name].incomingNames]\r\n      let nextName = leafToRoot[i+1]\r\n      // when nextName is same ranking\r\n      if (!incomingNames.includes(nextName)) {\r\n        this.rank[name] = ranking\r\n        return\r\n      }\r\n      // when nextName is higher ranking\r\n      if (incomingNames.includes(nextName)) {\r\n        this.rank[name] = ranking\r\n        ranking += 1\r\n        return\r\n      }\r\n    })\r\n  }\r\n\r\n  private deleteFromIncomingArr(deleteName: string, vertex: Vertex) {\r\n    vertex.incomingNames = vertex.incomingNames.filter(item => item !== deleteName)\r\n  }\r\n  \r\n  private deleteFromIncoming(deleteNameKey: string, vertex: Vertex) {\r\n    delete vertex.incoming[deleteNameKey]\r\n  }\r\n\r\n  private getOutgoingMap() {\r\n    let outGoingMap:{[name: string]: string[]} = {}\r\n    for (const [name, vertex] of Object.entries(this.vertices)) {\r\n      for (let from of vertex.incomingNames) {\r\n        if (outGoingMap[from] !== undefined) {\r\n          if (outGoingMap[from].includes(name)) {\r\n            continue\r\n          } else {\r\n            outGoingMap[from].push(name)\r\n          }\r\n        } else if (outGoingMap[from] === undefined) {\r\n          outGoingMap[from] = [name]\r\n        }\r\n      } \r\n    }\r\n    return outGoingMap\r\n  }\r\n\r\n  giveRank() {\r\n    if (this.topSorted.length !== this.names.length) this.topologySortCaller()\r\n    this.rank = {} // if not reset to empty, second time calling visit_giveRank wouod cause unexpected result\r\n    this.visit_giveRank()\r\n  }\r\n\r\n  delete(deleteName: string) {\r\n    \r\n    // Delete edge: whoever's has only outgoing and it is deleName\r\n    let outGoingMap = this.getOutgoingMap()\r\n    for (const [vertexName, outgoingList] of Object.entries(outGoingMap)) {\r\n      if (outgoingList.includes(deleteName) && outgoingList.length === 1) {\r\n        this.vertices[vertexName].hasOutgoing = false\r\n      }\r\n    }\r\n  \r\n    // Delete edge: whoever's 檢查 del 的下家 刪除掉     del 這個 incomming\r\n    for (const [vertexName, vertex] of Object.entries(this.vertices)) {\r\n      this.deleteFromIncomingArr(deleteName, vertex)\r\n      this.deleteFromIncoming(deleteName, vertex)\r\n    }\r\n\r\n    // Delete Vertex\r\n    delete this.vertices[deleteName]\r\n\r\n    // Delte from names \r\n    this.names = this.names.filter((name) => {\r\n      return name !== deleteName\r\n    })\r\n\r\n    // update topSorted and rank\r\n    this.giveRank();\r\n  }\r\n\r\n  changeName() {\r\n    //TODO\r\n  }\r\n}","import {vertexValue, Vertex, Vertices} from \"./types\"\r\n\r\nexport default class Dag {\r\n  names: string[]\r\n  vertices: Vertices\r\n\r\n  constructor() {\r\n    this.names = []\r\n    this.vertices = {}\r\n  }\r\n  \r\n  add(name: string) {\r\n    //if(!name) return\r\n    if(this.vertices.hasOwnProperty(name)) return this.vertices[name];\r\n\r\n    let vertex: Vertex = {\r\n      name: name,\r\n      incoming: {},\r\n      incomingNames: [],\r\n      hasOutgoing: false,\r\n      value: null\r\n    }\r\n\r\n    this.vertices[name] = vertex\r\n    this.names.push(name)\r\n    return vertex\r\n  }\r\n\r\n  map(name: string, value: vertexValue) {\r\n    this.add(name).value = value\r\n  }\r\n\r\n  visit(\r\n    vertex: Vertex, \r\n    fn: (vertex: Vertex, path: string[]) => void, \r\n    visited?: {[name: string]: boolean}, \r\n    path?: string[]\r\n  ) {\r\n    let [name, vertices, names] = [vertex.name, vertex.incoming, vertex.incomingNames]\r\n\r\n    if (!visited) visited = {};\r\n    if (!path) path =  [];\r\n  \r\n    if (visited.hasOwnProperty(name)) return\r\n\r\n    path.push(name)\r\n    visited[name] = true\r\n    \r\n    for (let incomingName of names) {\r\n      this.visit(vertices[incomingName], fn, visited, path)\r\n    }\r\n    fn(vertex, path)\r\n    path.pop();\r\n  }\r\n\r\n  addEdge(fromName: string, toName: string) {\r\n    if (!fromName || !toName || fromName === toName) return\r\n    let from = this.add(fromName)\r\n    let to = this.add(toName)\r\n    if (to.incoming.hasOwnProperty(fromName)) return\r\n\r\n    const checkCycle = (vertex: Vertex, path: string[]) => {\r\n      if (vertex.name === toName) {\r\n        throw new Error(\r\n          \"cycle detected: \" + toName + \" <- \" + path.join(\" <- \")\r\n        );\r\n      }\r\n    }\r\n\r\n    this.visit(from, checkCycle);\r\n    from.hasOutgoing = true;\r\n    to.incoming[fromName] = from;\r\n    to.incomingNames.push(fromName);\r\n  }\r\n\r\n  addEdges(name: string, value: vertexValue, before?: string | string[], after?: string | string[]) {\r\n    this.map(name, value)\r\n    if (before) {\r\n      if (typeof before === \"string\") {\r\n        this.addEdge(name, before)\r\n      }\r\n      if (Array.isArray(before)) {\r\n        before.forEach((beforeName) => {\r\n          this.addEdge(name, beforeName)\r\n        })\r\n      }\r\n    }\r\n    if (after) {\r\n      if (typeof after === \"string\") {\r\n        this.addEdge(after, name)\r\n      }\r\n      if (Array.isArray(after)) {\r\n        after.forEach((afterName) => {\r\n          this.addEdge(afterName, name)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  topsort(fn: (vertex: Vertex, path: string[]) => void) {\r\n    let visited = {}\r\n    let [ vertices, names ] = [ this.vertices, this.names ]\r\n    \r\n    for (let name of names) {\r\n      let vertex = vertices[name]\r\n      if (!vertex.hasOutgoing) {\r\n        this.visit(vertex, fn, visited)\r\n      }\r\n    }\r\n  }\r\n}","import { input, dagEdagesInput } from \"../../ts/types/app_types\";\r\n\r\n// enum Delimter {\r\n//   Comma = \",\",\r\n//   Space = \" \",\r\n//   Period = \".\",\r\n//   Semicolon = \";\",\r\n//   Comma2 = \"，\",\r\n//   Space2 = \"　\",\r\n//   Period2 = \"。\",\r\n// }\r\n\r\nexport default function inputParser(verticesInput: input) {\r\n  let { incomming, vertex, outgoing } = verticesInput;\r\n  let [incommingArr, outgoingArr] = [seperate(incomming.trim()), seperate(outgoing.trim())];\r\n  \r\n  let result: dagEdagesInput = {\r\n    incomming: arrTrim(incommingArr),\r\n    vertex: vertex.trim(),\r\n    outgoing: arrTrim(outgoingArr),\r\n  };\r\n\r\n  return result\r\n}\r\n\r\nfunction seperate(str: string) {\r\n  return str.split(/[\\s,]+/);\r\n}\r\n\r\nfunction arrTrim(arr: string[]) {\r\n  let result: string[] = []\r\n  arr.forEach((each, i) => {\r\n    result[i] = each.trim()\r\n  })\r\n  return result\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Graph from \"../../dag/graphClass\"\r\nimport { input } from \"../../ts/types/app_types\";\r\nimport inputParser from '../utils/inputParser';\r\n\r\ntype setDag = {\r\n  createVertex: (input: input) => boolean,\r\n  deleteVertex: (name: string) => void,\r\n  appendVertexValue: (name: string, value: string) => void,\r\n  resetDag: () => void,\r\n}\r\ntype dagCtx = [Graph, setDag, boolean, React.Dispatch<React.SetStateAction<boolean>> | (() => {})]\r\n\r\ntype dagMapLocalStorage = {\r\n  [name: string] : {\r\n    rank : number,\r\n    value: string | null,\r\n    incomingNames : string[],\r\n  }\r\n}\r\n\r\nexport const DagContext = React.createContext<dagCtx>([\r\n  {} as Graph,\r\n  {} as setDag,\r\n  false,\r\n  () => { }\r\n]);\r\n\r\ntype DagContextProviderProps = {\r\n  setlocalStorage: (dagData: string) => void,\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const DagContextProvider = ({ setlocalStorage, children }: DagContextProviderProps) => {\r\n\r\n  /** Since we use dag class's method to update vertex vlaue,\r\n   *  React would not know the update of dag unless having a update state \r\n   *  to inform react to rerender CreateVertex.tsx where we import dag data\r\n   */\r\n  const [update, setUpdate] = useState(false)\r\n  const [dag, _setDag] = useState<Graph>(new Graph())\r\n  const setDag = {\r\n    createVertex,\r\n    deleteVertex,\r\n    appendVertexValue,\r\n    resetDag,\r\n  }\r\n\r\n  const updateDagLocalStorage = (dag: Graph) => {\r\n    const map : dagMapLocalStorage = {}\r\n    dag.names.forEach((name) => {\r\n      map[name] = {\r\n        rank: dag.rank[name],\r\n        value: dag.vertices[name].value ?? null,\r\n        incomingNames: dag.vertices[name].incomingNames\r\n      }\r\n    })\r\n    const mapStr = JSON.stringify(map)\r\n    setlocalStorage(mapStr)\r\n  }\r\n\r\n  const repaintPrevDag = () => {\r\n    const prevDagData = window.localStorage.getItem(\"dagData\")\r\n    if (prevDagData === null || prevDagData === \"null\" || prevDagData === '') return\r\n    const map : dagMapLocalStorage = JSON.parse(prevDagData)\r\n    for (let [name, value] of Object.entries(map)) {\r\n      dag.map(name, map[name].value)\r\n      value.incomingNames.forEach((incomingName) => {\r\n        dag.addEdge(incomingName, name)\r\n      })\r\n    }\r\n    dag.giveRank()\r\n    console.log(dag)\r\n    setUpdate(!update)\r\n  }\r\n\r\n  function createVertex(input: input) {\r\n    if (!input.vertex) {\r\n      alert(`Vertex Name must not be empty`)\r\n      return false\r\n    }\r\n    let { incomming, vertex, outgoing } = inputParser(input)\r\n    const value = dag.vertices[vertex] ? dag.vertices[vertex].value : null\r\n    try {\r\n      dag.addEdges(vertex, value, outgoing, incomming)\r\n      dag.giveRank()\r\n    } catch (err) {\r\n      alert(err)\r\n      return false\r\n    }\r\n    setUpdate(!update)\r\n    updateDagLocalStorage(dag)\r\n    return true\r\n  }\r\n\r\n  function deleteVertex(name: string) {\r\n    if (!dag.names.includes(name)) {\r\n      alert(`Tag >>> ${name} <<< not exist !`)\r\n      return\r\n    }\r\n    dag.delete(name)\r\n    setUpdate(!update)\r\n    updateDagLocalStorage(dag)\r\n  }\r\n\r\n  function appendVertexValue(name: string, value: string) {\r\n    dag.map(name, value)\r\n    setUpdate(!update)\r\n    updateDagLocalStorage(dag)\r\n  }\r\n\r\n  function resetDag() {\r\n    setlocalStorage('')\r\n    setUpdate(!update)\r\n    /**\r\n     *  to inform DrawGraph.tsx dag is changed and update UI\r\n     */\r\n    _setDag(() => new Graph())\r\n  }\r\n\r\n  useEffect(() => {\r\n    repaintPrevDag()\r\n  }, [])\r\n\r\n  return (\r\n    <DagContext.Provider value={[dag, setDag, update, setUpdate]}>\r\n      {children}\r\n    </DagContext.Provider>\r\n  )\r\n}","import { IdagData } from \"../../dag/types\";\r\n\r\ntype arrowsRecord = {\r\n  [key: number]: {\r\n    name: string;\r\n    incommingName: string;\r\n  };\r\n}\r\n\r\nexport default function arrowsInfoGetter(dag: IdagData): [arrowsRecord, number] {\r\n  \r\n  if (!dag.topSorted) throw new Error(\"dag has no topSorted yet, dag.topSorted might be undefined \");\r\n  let topSorted = [...dag.topSorted];\r\n  let counter = 0;\r\n  let map: arrowsRecord = {};\r\n\r\n  topSorted.reverse().forEach((name, i) => {\r\n    let incommingNames = dag[\"vertices\"][name][\"incomingNames\"];\r\n    incommingNames.forEach((incommingName, j) => {\r\n      map[counter] = {\r\n        name: name,\r\n        incommingName: incommingName,\r\n      };\r\n      counter += 1;\r\n    });\r\n  });\r\n\r\n  return [map, counter];\r\n}\r\n","// mountPath(divs, arrowRef, [opt])  opt is for dynamic draw connector\r\n\r\nexport class SvgPath {\r\n  private ele: SVGPathElement;\r\n  command : string | null\r\n\r\n  constructor(ele: SVGPathElement) {\r\n    this.ele = ele;\r\n    this.command = this.ele.getAttribute(\"d\")\r\n  }\r\n\r\n  mount(pathPara: string) {\r\n    this.ele.setAttribute(\"d\", pathPara);\r\n  }\r\n}\r\n\r\nexport class SvgPathEnds {\r\n  private from: HTMLDivElement;\r\n  private to: HTMLDivElement;\r\n\r\n  constructor(divs: { from: HTMLDivElement; to: HTMLDivElement }) {\r\n    this.from = divs.from;\r\n    this.to = divs.to;\r\n  }\r\n  \r\n  private getPosnLeftEnds() {\r\n    let endFrom = {\r\n      x: this.from.offsetLeft - 8,\r\n      y: this.from.offsetTop + this.from.offsetHeight / 2 + 10,\r\n    };\r\n    let endTo = {\r\n      x: this.to.offsetLeft - 8,\r\n      y: this.to.offsetTop + this.to.offsetHeight / 2 - 10,\r\n    };\r\n    endFrom.x += getTrans(this.from).number.x\r\n    endFrom.y += getTrans(this.from).number.y\r\n    endTo.x += getTrans(this.to).number.x\r\n    endTo.y += getTrans(this.to).number.y\r\n\r\n    return [endFrom, endTo];\r\n  }\r\n\r\n  private getPosnTopButtonEnds() {\r\n    let endFrom = {\r\n      x: this.from.offsetLeft + this.from.offsetWidth / 2,\r\n      y: this.from.offsetTop + this.from.offsetHeight + 8\r\n    }\r\n    let endTo = {\r\n      x: this.from.offsetLeft + this.from.offsetWidth / 2,\r\n      y: this.from.offsetTop - 8\r\n    }\r\n    endFrom.x += getTrans(this.from).number.x\r\n    endFrom.y += getTrans(this.from).number.y\r\n    endTo.x += getTrans(this.to).number.x\r\n    endTo.y += getTrans(this.to).number.y\r\n\r\n    return [endFrom , endTo]\r\n  }\r\n\r\n  getStraitCommand() {\r\n    const [endFrom, endTo] = this.getPosnTopButtonEnds();\r\n    // M142,200 L142,330\r\n    let straightPara = {\r\n      moveFrom: endFrom,\r\n      LineTo: endTo\r\n    }\r\n    let dStr = getStraightCommand(straightPara)\r\n    return dStr\r\n  }\r\n\r\n  getCurveCommand() {\r\n    const [endFrom, endTo] = this.getPosnLeftEnds();\r\n    const delta = 100\r\n    let curvePara = {\r\n      moveFrom: endFrom,\r\n      controlPoint1: { x: endFrom.x - delta, y: endFrom.y },\r\n      controlPoint2: { x: endTo.x - delta, y: endTo.y },\r\n      moveTo: endTo,\r\n    };\r\n    let dStr = getCurvePathCommand(curvePara);\r\n    return dStr\r\n  }\r\n}\r\n\r\nexport function getNewCurvesPathCommnadAfterDrag(prevCommand: string, indicator: \"FROM\" | \"TO\", translate: {x: number, y: number}) {\r\n  // prevCommand = \"M142,180 C42,180 192,310 292,310\"\r\n  let prevPara = prevCommand.split(/[\\s|,]/g) // ['M142', '180', 'C42', '180', '192', '310', '292', '310']\r\n  prevPara[0] = prevPara[0].replace(\"M\", \"\") \r\n  prevPara[2] = prevPara[2].replace(\"C\", \"\") // prevPara = ['142', '180', '42', '180', '192', '310', '292', '310']\r\n  \r\n  const curvePara = {\r\n    moveFrom: {x: +prevPara[0], y: +prevPara[1]},\r\n    controlPoint1: {x: +prevPara[2], y: +prevPara[3]},\r\n    controlPoint2: {x: +prevPara[4], y: +prevPara[5]},\r\n    moveTo: {x: +prevPara[6], y: +prevPara[7]},\r\n  }\r\n  \r\n  if (indicator === \"FROM\") {\r\n    curvePara.moveFrom.x += translate.x\r\n    curvePara.moveFrom.y += translate.y\r\n    curvePara.controlPoint1.x += translate.x\r\n    curvePara.controlPoint1.y += translate.y\r\n  } else if (indicator === \"TO\") {\r\n    curvePara.controlPoint2.x += translate.x\r\n    curvePara.controlPoint2.y += translate.y\r\n    curvePara.moveTo.x += translate.x\r\n    curvePara.moveTo.y += translate.y\r\n  } else throw new Error(\"Wrong indicaotr format\")\r\n  const newCurvePara = getCurvePathCommand(curvePara)\r\n  return newCurvePara\r\n}\r\n\r\nexport function getNewStraightPathCommandAfterDrag(prevCommand: string, indicator: \"FROM\" | \"TO\", translate: {x: number, y: number}) {\r\n  // prevCommand = \"M200,239L471,305\"\r\n  let prevPara = prevCommand.split(/[\\s|,]/g) // ['M200', '239', 'L471', '305']\r\n  prevPara[0] = prevPara[0].replace(\"M\", \"\")\r\n  prevPara[2] = prevPara[2].replace(\"L\", \"\") // // ['200', '239', '471', '305']\r\n  \r\n  const straightPara = {\r\n    moveFrom: {x: +prevPara[0], y: +prevPara[1]},\r\n    LineTo: {x: +prevPara[2], y: +prevPara[3]},\r\n  }\r\n\r\n  if (indicator === \"FROM\") {\r\n    straightPara.moveFrom.x += translate.x\r\n    straightPara.moveFrom.y += translate.y\r\n  } else if (indicator === \"TO\") {\r\n    straightPara.LineTo.x += translate.x\r\n    straightPara.LineTo.y += translate.y\r\n  } else throw new Error(\"Wrong indicator format\")\r\n  const newStraightPara = getStraightCommand(straightPara)\r\n  return newStraightPara\r\n}\r\n\r\nfunction getCurvePathCommand(CurvesPara: {\r\n  moveFrom: { x: number; y: number };\r\n  controlPoint1: { x: number; y: number };\r\n  controlPoint2: { x: number; y: number };\r\n  moveTo: { x: number; y: number };\r\n}) {\r\n  const { moveFrom, controlPoint1, controlPoint2, moveTo } = CurvesPara;\r\n  const dStr =\r\n    `M${moveFrom.x},${moveFrom.y} ` +\r\n    `C${controlPoint1.x},${controlPoint1.y} ` +\r\n    `${controlPoint2.x},${controlPoint2.y} ` +\r\n    `${moveTo.x},${moveTo.y}`;\r\n  return dStr;\r\n}\r\n\r\nfunction getStraightCommand(StraightPara: {\r\n  moveFrom: { x: number; y: number },\r\n  LineTo: { x: number; y: number }\r\n}) {\r\n  const {moveFrom, LineTo} = StraightPara;\r\n  const dStr = \r\n    `M${moveFrom.x},${moveFrom.y} ` +\r\n    `L${LineTo.x},${LineTo.y}`;\r\n  return dStr;\r\n}\r\n\r\nfunction getTrans(transform: HTMLDivElement) {\r\n  let trans = transform.style.transform // transform: 'translate(0%, 0%) translate(150px, 150px)'\r\n  const arr = trans.split(\" \") \r\n  const transArr = arr.map((each) => {\r\n    return +each.replace(/[^\\d]/g, \"\") // ['0', '0', '150', '150'] into number[]\r\n  }) \r\n  const result = {\r\n    percentage: {x: transArr[0], y: transArr[1]},\r\n    number: {x: transArr[2], y: transArr[3]}\r\n  }\r\n  return result \r\n}\r\n\r\n\r\n\r\n// let drawConnector = function(divFrom, divTo, arrowLeft) {\r\n//   let fromPosnLeft = {\r\n//     x: divFrom.offsetLeft - 8,\r\n//     y: divFrom.offsetTop  + divFrom.offsetHeight / 2 + 10\r\n//   };\r\n//   let toPosnLeft = {\r\n//     x: divTo.offsetLeft - 8,\r\n//     y: divTo.offsetTop  + divTo.offsetHeight / 2 - 10\r\n//   };\r\n//   let dStrLeft =\r\n//       \"M\" +\r\n//       (fromPosnLeft.x      ) + \",\" + (fromPosnLeft.y) + \" \" +\r\n//       \"C\" +\r\n//       (fromPosnLeft.x - 100) + \",\" + (fromPosnLeft.y) + \" \" +\r\n//       (toPosnLeft.x - 100) + \",\" + (toPosnLeft.y) + \" \" +\r\n//       (toPosnLeft.x      ) + \",\" + (toPosnLeft.y);\r\n//   arrowLeft.setAttribute(\"d\", dStrLeft);\r\n// };\r\n","import { arrowStyle, RefsArrows } from \"../../ts/types/app_types\"\r\nimport { SvgPath, SvgPathEnds, getNewCurvesPathCommnadAfterDrag, getNewStraightPathCommandAfterDrag } from \"../utils/svgPathHandler\"\r\n\r\nexport function useDrawConnectorInitial(styleOpt: arrowStyle) {\r\n  function drawConnectorInitial(\r\n    divs: {from: HTMLDivElement, to: HTMLDivElement},\r\n    arrowRef: SVGPathElement,\r\n    translateMap = {\r\n      divFrom: { x: 0, y: 0 },\r\n      divTo: { x: 0, y: 0 },\r\n    } // TODO: btn switch btw defualt position <-> dragged positin\r\n  ) {\r\n    const path = new SvgPath(arrowRef)\r\n    const ends = new SvgPathEnds(divs)\r\n    let pathCommand = ''\r\n    if (styleOpt === 'CURVE') pathCommand = ends.getCurveCommand()\r\n    if (styleOpt === 'STRAIGHT') pathCommand = ends.getStraitCommand()\r\n    path.mount(pathCommand)\r\n  }\r\n\r\n  return ({ drawConnectorInitial })\r\n}\r\n\r\n\r\n\r\nexport function useDrawConnectorDynamic(styleOpt: arrowStyle) {\r\n\r\n  let defaultPathMemoizer: {[pathId: string]: string} = {}\r\n  \r\n  function drawConnectorDynamic(\r\n    arrowsRef: RefsArrows,\r\n    vertexName: string,\r\n    translate: {x: number, y:number}\r\n  ) {\r\n    //TODO   \r\n    arrowsRef.forEach((arrowRef, i) => {\r\n      const pathRef = arrowRef.current\r\n      let indicator: \"FROM\" | \"TO\"\r\n      if (pathRef?.getAttribute(\"data-vertex_from\") === vertexName ) {\r\n        indicator = \"FROM\" \r\n      } else if (pathRef?.getAttribute(\"data-vertex_to\") === vertexName ) {\r\n        indicator = \"TO\"\r\n      } else throw new Error(\"SVGPathElemet missing attrivute data-vertex_from and data-vertex_to\")\r\n\r\n      const path = new SvgPath(pathRef)\r\n      \r\n      if (!path.command) throw new Error (\"path.command not found\")\r\n      if (!defaultPathMemoizer[pathRef.id]) {\r\n        defaultPathMemoizer[pathRef.id] = path.command\r\n      }\r\n      if (defaultPathMemoizer[pathRef.id]) {\r\n        let newPathCommand = ''\r\n        if (styleOpt === 'CURVE') {\r\n          newPathCommand = getNewCurvesPathCommnadAfterDrag(defaultPathMemoizer[pathRef.id], indicator, translate)\r\n        } else if (styleOpt === 'STRAIGHT') {\r\n          newPathCommand = getNewStraightPathCommandAfterDrag(defaultPathMemoizer[pathRef.id], indicator, translate)\r\n        }\r\n        path.mount(newPathCommand)\r\n      }\r\n    })\r\n  }\r\n\r\n  return ({ drawConnectorDynamic })\r\n}","import React, { useEffect, useContext } from \"react\";\r\nimport { arrowStyle } from \"../../ts/types/app_types\";\r\nimport { PositionContext } from \"../contexts/PositionContext\";\r\nimport { useDrawConnectorInitial } from \"../hooks/useDrawSVGConnector\";\r\n\r\n\r\nexport default function Arrow(props: {\r\n  incommingName: string;\r\n  name: string;\r\n  arrowStyleOpt: arrowStyle;\r\n  forwardedRef: React.MutableRefObject<SVGPathElement>;\r\n  forwardedDivsRef: React.RefObject<HTMLDivElement>[];\r\n}) {\r\n  const { incommingName, name, arrowStyleOpt, forwardedRef, forwardedDivsRef } = props;\r\n\r\n  let [positionMap] = useContext(PositionContext);\r\n  let {drawConnectorInitial} = useDrawConnectorInitial(arrowStyleOpt)\r\n\r\n\r\n  function relatedDivsChecker() {\r\n    const relatedDivs:{from: HTMLDivElement|null, to: HTMLDivElement|null} = {from: null, to: null}\r\n    for (let ref of forwardedDivsRef) {\r\n      const div = ref.current;\r\n      if (div?.id === incommingName) relatedDivs.from = div;\r\n      if (div?.id === name) relatedDivs.to = div;\r\n    }\r\n    // if (typeof relatedDivs.from === null && typeof relatedDivs.to === null) {\r\n    //   throw new Error (\"find no related vertex divs in Arrow.tsx\")\r\n    // } else {\r\n    //   return relatedDivs\r\n    // }\r\n\r\n    /// TODO \r\n    /// 也許要抽出到 utils 寫個 JEST，不然之後只會 改Ａ壞Ｂ 然後找半天\r\n    if (relatedDivs.from === null && relatedDivs.to === null) throw new Error(\"Cant access divs refs in Arrow.tsx\")\r\n    return relatedDivs as {from: HTMLDivElement, to: HTMLDivElement}; \r\n  }\r\n\r\n  useEffect(() => {\r\n    /** Mount path command on SVGElement */\r\n    let relatedDivs = relatedDivsChecker()\r\n    drawConnectorInitial(relatedDivs, forwardedRef.current)\r\n\r\n  }, [forwardedDivsRef]);\r\n\r\n  return (\r\n    <g\r\n      fill=\"none\"\r\n      stroke=\"black\"\r\n      strokeWidth=\"2\"\r\n      markerEnd=\"url(#arrowhead)\"\r\n    >\r\n      <path\r\n        ref={forwardedRef}\r\n        id={`arrowLeft_${name}_${incommingName}`}\r\n        data-vertex_from={incommingName}\r\n        data-vertex_to={name}\r\n      />\r\n    </g>\r\n  );\r\n}\r\n","import arrowsInfoGetter from \"./utils/arrowsInfoGetter\";\r\nimport { IdagData } from \"../dag/types\"\r\nimport Arrow from \"./Arrow/Arrow\"\r\nimport { arrowStyle } from \"../ts/types/app_types\";\r\n\r\nexport default function arrowRenderer(props: {\r\n  dag: IdagData,\r\n  refs: [React.MutableRefObject<any>, React.MutableRefObject<any>], \r\n  arrowStyleOpt: arrowStyle\r\n}) {\r\n  const {dag, refs, arrowStyleOpt} = props\r\n  const [divsRefs, arrowsRefs] = refs\r\n  const [arrowsRecord, arrowsNumber] = arrowsInfoGetter(dag)\r\n\r\n  return [...Array(arrowsNumber)].map((e, i) => (\r\n    <Arrow\r\n      incommingName={arrowsRecord[i].incommingName}\r\n      name={arrowsRecord[i].name}\r\n      arrowStyleOpt={arrowStyleOpt}\r\n      key={i}\r\n      forwardedRef={arrowsRefs.current[i]}\r\n      forwardedDivsRef={divsRefs.current}\r\n    />\r\n  ));\r\n};","import styled from \"styled-components\";\r\n\r\ninterface IPosn {\r\n  posn: {\r\n    position: string,\r\n    top?: string,\r\n    left?: string,\r\n  }\r\n}\r\n\r\nexport const Container = styled.div<IPosn>`\r\n  color: ${( {theme}) => theme.text};\r\n  background-color:${( {theme}) => theme.vertexbg};\r\n  text-align: center;\r\n  padding: 10px;\r\n  min-width: 100px;\r\n  height: auto;\r\n  border-radius: 15px;\r\n\r\n  position: absolute;\r\n  top: ${( {posn} ) => posn.top};\r\n  left: ${( {posn} ) => posn.left};\r\n\r\n  &:hover {\r\n    cursor: grab;\r\n  }\r\n\r\n  &.draggable-dragging{\r\n    cursor: grabbing;\r\n  }\r\n\r\n  /*\r\n      To Prevent user selectin inside the drag source \r\n      This is also covered in draggable component (duplicated)\r\n  */\r\n  user-select: none;\r\n  -moz-user-select: none;\r\n  -webkit-user-select: none;\r\n  -ms-user-select: none;\r\n\r\n  /*\r\n      vertex's name as key \r\n  */\r\n  span {\r\n    background-color: rgba(14, 151, 179, 0.13);\r\n    padding: 0 5% 0 5%;\r\n    position: absolute;\r\n    top: 3%;\r\n    left: 4px;\r\n    border: 1px solid rgba(16, 18, 27, 0.35);\r\n    border-radius: 15px;\r\n  }\r\n\r\n  /*\r\n      vertex's value could changed by submitting form\r\n  */\r\n  form input{\r\n    color: ${( {theme}) => theme.text};\r\n    background-color:${( {theme}) => theme.vertexbg};\r\n    border: 0;\r\n    border-radius: 15px;\r\n    outline: 0;\r\n    cursor: inherit;\r\n    max-width: 80px;\r\n    font-size: 1.08rem;\r\n    text-align: center;\r\n\r\n    &:focus{\r\n      background-color: rgb(156 163 175);\r\n    }\r\n  }\r\n`\r\n","export type ControlPosition = {x: number, y: number}\r\nexport type PositionOffsetControlPosition = {x: number|string, y: number|string}\r\n\r\nexport function createCSSTransform(contorlPos: ControlPosition, positionOffset: PositionOffsetControlPosition) {\r\n  const translation = getTranslation(contorlPos, positionOffset, 'px');\r\n  return {'transform': translation}\r\n}\r\n\r\nexport function getTranslation({x,y}: ControlPosition, positionOffset: PositionOffsetControlPosition, unitSuffix: string) {\r\n  let translation = `translate(${x}${unitSuffix},${y}${unitSuffix})`\r\n  if (positionOffset) {\r\n    const defaultX = `${(typeof positionOffset.x === 'string') ? positionOffset.x : positionOffset.x + unitSuffix}`\r\n    const defaultY = `${(typeof positionOffset.y === 'string') ? positionOffset.y : positionOffset.y + unitSuffix}`\r\n    translation = `translate(${defaultX}, ${defaultY}) ` + translation\r\n  }\r\n  return translation\r\n}\r\n\r\nexport function offsetXYFromParent(evt: MouseEvent, offsetParent: Element): ControlPosition {\r\n const isBody = offsetParent === offsetParent.ownerDocument.body\r\n const offsetParentRect = isBody ? {left: 0, top: 0} : offsetParent.getBoundingClientRect();\r\n\r\n const x = (evt.clientX + offsetParent.scrollLeft - offsetParentRect.left);\r\n const y = (evt.clientY + offsetParent.scrollTop - offsetParentRect.top);\r\n\r\n return {x, y}\r\n}\r\n\r\nexport function addEvent(ele: Node, event: string, handler: (event: any) => void, inputOptions?: Object) {\r\n  const options = {capture: true, ...inputOptions};\r\n\r\n  ele.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEvent (ele: Node, event: string, handler: (event: any) => void, inputOptions?: Object) {\r\n  const options = {capture: true, ...inputOptions}\r\n\r\n  ele.removeEventListener(event, handler, options)\r\n}\r\n\r\n// Handle ref, access controll ref in useEffect or ref would be default (null)\r\n// In DraggableCore.tsx \r\nexport function withControlledNodeRef(node: HTMLDivElement, handler: (event: any, node: HTMLDivElement) => void) {\r\n  return function eventHandler(event: any) {\r\n    handler(event, node)\r\n  }\r\n}\r\n\r\n// User-select Hacks:\r\n//\r\n// Useful for preventing blue highlights all over everything when dragging.\r\n\r\n// Note we're passing `document` b/c we could be iframed\r\n// Unalbe select while dragging\r\nexport function addUserSelectStyles(doc?: Document) {\r\n  if (!doc) return;\r\n  let styleEl = doc.getElementById('draggable-style-el') as HTMLStyleElement;\r\n  if (!styleEl) {\r\n    styleEl = doc.createElement('style');\r\n    styleEl.type = 'text/css';\r\n    styleEl.id = 'draggable-style-el';\r\n    styleEl.innerHTML = '.draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\r\n    styleEl.innerHTML += '.draggable-transparent-selection *::selection {all: inherit;}\\n';\r\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\r\n  }\r\n  if (doc.body) addClassName(doc.body, 'draggable-transparent-selection')\r\n}\r\n\r\nexport function removeUserSelectStyles(doc?: Document) {\r\n  if (!doc) return\r\n  try {\r\n    if (doc.body) removeClassName(doc.body,'draggable-transparent-selection');\r\n    // Remove selection caused by scroll, unless it's a focused input\r\n    // (we use doc.defaultView in case we're in an iframe)\r\n    const selection = (doc.defaultView || window).getSelection();\r\n    if (selection && selection.type !== 'Caret') {\r\n      selection.removeAllRanges();\r\n    }\r\n  } catch (e) {\r\n    // probably IE\r\n  }\r\n}\r\n\r\nexport function addClassName(el: HTMLElement, className: string) {\r\n  if (el.classList) {\r\n    el.classList.add(className);\r\n  } else {\r\n    if (!el.className.match(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`))) {\r\n      el.className += ` ${className}`\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeClassName(el: HTMLElement, className: string) {\r\n  if (el.classList) {\r\n    el.classList.remove(className)\r\n  } else {\r\n    el.className = el.className.replace(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`, 'g'), '');\r\n  }\r\n}","import { DraggableData } from \"./types\";\r\nimport { offsetXYFromParent } from \"./domFns\";\r\n\r\nexport function canDragX(axis: string) {\r\n  return axis === \"both\" || axis === \"x\";\r\n}\r\n\r\nexport function canDragY(axis: string) {\r\n  return axis === \"both\" || axis === \"y\";\r\n}\r\n\r\nexport function getControlPosition(e: MouseEvent, node: HTMLElement) {\r\n  const offsetParent = node.offsetParent || node.ownerDocument.body;\r\n  return offsetXYFromParent(e, offsetParent);\r\n}\r\n\r\n// Create an data object exposed by <DraggableCore>'s events\r\nexport function createCoreData(\r\n  state: { lastX: number; lastY: number },\r\n  x: number,\r\n  y: number,\r\n  node: HTMLElement\r\n) {\r\n  const { lastX, lastY } = state;\r\n  const isStart = !isNum(lastX);\r\n  if (isStart) {\r\n    // If this is our first move, use the x and y as last coords.\r\n    return {\r\n      node,\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      lastX: x,\r\n      lastY: y,\r\n      x,\r\n      y,\r\n    };\r\n  } else {\r\n    // Otherwise calculate proper values.\r\n    return {\r\n      node,\r\n      deltaX: x - lastX,\r\n      deltaY: y - lastY,\r\n      lastX: lastX,\r\n      lastY: lastY,\r\n      x,\r\n      y,\r\n    };\r\n  }\r\n}\r\n\r\n// Create an data object exposed by <Draggable>'s events\r\nexport function createDraggableData(\r\n  draggableState: { dragging: boolean; dragged: boolean; x: number; y: number },\r\n  scale: number,\r\n  coreData: DraggableData\r\n): DraggableData {\r\n  return {\r\n    node: coreData.node,\r\n    x: draggableState.x + (coreData.deltaX / scale),\r\n    y: draggableState.y + (coreData.deltaY / scale),\r\n    deltaX: (coreData.deltaX / scale),\r\n    deltaY: (coreData.deltaY / scale),\r\n    lastX: draggableState.x,\r\n    lastY: draggableState.y,\r\n  }\r\n}\r\n\r\nfunction isNum(num: any): boolean {\r\n  return typeof num === \"number\";\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addEvent, addUserSelectStyles, removeEvent, removeUserSelectStyles, withControlledNodeRef } from \"./domFns\";\r\nimport log from \"./log\";\r\nimport { getControlPosition, createCoreData } from \"./positionFns\";\r\nimport { AllPropsRequired, DraggableCoreProps } from \"./types\";\r\n\r\nconst eventsFor = {\r\n  touch: {\r\n    start: \"touchstart\",\r\n    move: \"touchmove\",\r\n    stop: \"touchend\",\r\n  },\r\n  mouse: {\r\n    start: \"mousedown\",\r\n    move: \"mousemove\",\r\n    stop: \"mouseup\",\r\n  },\r\n};\r\n\r\nlet dragEventFor = eventsFor.mouse;\r\n\r\nexport default function DraggableCore(props: DraggableCoreProps) {\r\n\r\n  //Default Props\r\n  const args: AllPropsRequired<DraggableCoreProps> = {\r\n    ...props,\r\n    allowAnyClick: props.allowAnyClick ?? false,\r\n    disabled: props.disabled ?? false,\r\n    enableUserSelectHack: props.enableUserSelectHack ?? true,\r\n    onStart: props.onStart ?? (() => {}),\r\n    onDrag: props.onDrag ?? (() => {}),\r\n    onStop: props.onStop ?? (() => {}),\r\n    onMouseDown: props.onMouseDown ?? (() => {}),\r\n    scale: props.scale ?? 1\r\n  }\r\n\r\n\r\n  const [state, setState] = useState({\r\n    dragging: false,\r\n    lastX: NaN,\r\n    lastY: NaN,\r\n  });\r\n\r\n\r\n\r\n  function handleDragStart(e: MouseEvent, thisNode: HTMLDivElement) {\r\n    const ownerDocument = thisNode.ownerDocument\r\n    const position = getControlPosition(e, thisNode);\r\n    const { x, y } = position;\r\n    const coreEvent = createCoreData(state, x, y, thisNode)\r\n\r\n    log('DraggableCore: handleDragStart: %j', coreEvent);\r\n\r\n    // Call event handler. If it returns explicit false, cancel.\r\n    log('calling', args.onStart)\r\n    const shouldUpdate = args.onStart(e, coreEvent) \r\n    if (shouldUpdate === false) return;\r\n\r\n    // Add a style to the body to disable user-select. This prevents text from\r\n    // being selected all over the page.\r\n    if (args.enableUserSelectHack) addUserSelectStyles(ownerDocument);\r\n\r\n    setState({\r\n      dragging: true, \r\n      lastX: x,\r\n      lastY: y\r\n    })\r\n  }\r\n\r\n  function handleDrag (e: MouseEvent) {\r\n    // Get the current drag point from the event. This is used as the offset.\r\n    const thisNode = args.forwardedRef.current\r\n    if(!thisNode) throw new Error(\"forwarded reference of vertex is null\")\r\n    const position = getControlPosition(e, thisNode)\r\n    let { x, y } = position;\r\n    // Create an event object w/ all the data parents need to make a decision here.\r\n    const coreEvent = createCoreData(state, x, y, thisNode)\r\n\r\n    log('DraggableCore: handleDrag: %j', coreEvent)\r\n\r\n    // Call event handler. If it returns explicit falase, cancel. -> see example \"I don't want to be drag\"\r\n    const shouldUpdate = args.onDrag(e, coreEvent)\r\n    if (shouldUpdate === false ) {\r\n      try {\r\n        handleDragStop(new MouseEvent('mouseup'))\r\n      } catch (err) {\r\n        // Old browers\r\n        const event = ((document.createEvent('MouseEvents')))\r\n        event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        handleDragStop(event);\r\n      }\r\n      return\r\n    }\r\n\r\n    setState((prev) =>({\r\n      ...prev,\r\n      lastX: x, \r\n      lastY: y\r\n    }))\r\n\r\n  }\r\n\r\n  function handleDragStop(e: MouseEvent) {\r\n    \r\n    if (!state.dragging) return; // return when re-render after setState in this function.\r\n\r\n    const thisNode = args.forwardedRef.current;\r\n    if(!thisNode) throw new Error(\"forwarded reference of vertex is null\")\r\n    const ownerDocument = thisNode.ownerDocument\r\n    const position = getControlPosition(e, thisNode);\r\n    const {x, y} = position;\r\n    const coreEvent = createCoreData(state, x, y, thisNode);\r\n\r\n    // Call event handler\r\n    const shouldContinue = args.onStop(e, coreEvent);\r\n    if (shouldContinue === false ) return false;\r\n\r\n    // Remove user-select hack\r\n    if (args.enableUserSelectHack) {\r\n      removeUserSelectStyles(ownerDocument);\r\n    };\r\n\r\n    log('DraggableCore: handleDragStop: %j', coreEvent)\r\n\r\n    setState({\r\n      dragging: false,\r\n      lastX: NaN,\r\n      lastY: NaN,\r\n    });\r\n\r\n  }\r\n\r\n  //TODO: onTouchStart() , onTAouchEnd(), change eventsFor \r\n  function onMouseDown(e: MouseEvent) {\r\n    dragEventFor = eventsFor.mouse;\r\n    //return handleDragStart(e);\r\n  }\r\n  function onMouseUp(e: MouseEvent) {\r\n    dragEventFor = eventsFor.mouse;\r\n    //return handleDragStop(e);\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    const thisNode = args.forwardedRef.current;\r\n    if(!thisNode) throw new Error(\"forwarded reference of vertex is null\")\r\n    const ownerDocument = thisNode.ownerDocument\r\n    \r\n    addEvent(thisNode, dragEventFor.start, withControlledNodeRef(thisNode, handleDragStart), {passive: false});\r\n    if (state.dragging) {\r\n      // thisNode is controlled when dragging, thus no need withControlledNodeRef to wrap the handler.\r\n      addEvent(ownerDocument, dragEventFor.move, handleDrag)\r\n      addEvent(ownerDocument, dragEventFor.stop, handleDragStop)\r\n    }\r\n\r\n    return () => {\r\n      removeEvent(thisNode, dragEventFor.start, withControlledNodeRef(thisNode, handleDragStart), {passive: false})\r\n      removeEvent(ownerDocument, dragEventFor.move, handleDrag)\r\n      removeEvent(ownerDocument, dragEventFor.stop, handleDragStop)\r\n      if (args.enableUserSelectHack) removeUserSelectStyles(ownerDocument)\r\n    }\r\n  }, [state.dragging]);\r\n\r\n  return (\r\n    <>\r\n      {/* {React.cloneElement(React.Children.only(args.children), {\r\n        onMouseDown: onMouseDown,\r\n        onMouseUp: onMouseUp,\r\n      })} */}\r\n      {args.children}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { createCSSTransform } from \"./domFns\";\r\nimport { canDragX, canDragY, createDraggableData } from \"./positionFns\";\r\nimport { AllPropsRequired, DraggableData, DraggableProps  } from \"./types\";\r\nimport DraggableCore from \"./DraggableCore\";\r\n\r\n\r\nexport default function Draggable(props: DraggableProps) {\r\n\r\n  // Default Props\r\n  const args: AllPropsRequired<DraggableProps> = {\r\n    ...props,\r\n    // from DraggableCore\r\n    allowAnyClick: props.allowAnyClick ?? false,\r\n    disabled: props.disabled ?? false,\r\n    enableUserSelectHack: props.enableUserSelectHack ?? true,\r\n    onStart: props.onStart ?? (() => {}),\r\n    onDrag: props.onDrag ?? (() => {}),\r\n    onStop: props.onStop ?? (() => {}),\r\n    onMouseDown: props.onMouseDown ?? (() => {}),\r\n    scale: props.scale ?? 1,\r\n    // from draggable itself\r\n    defaultClassName: props.defaultClassName !== undefined ? props.defaultClassName : 'draggable',\r\n    defaultClassNameDragging: props.defaultClassNameDragging ?? 'draggable-dragging',\r\n    defaultClassNameDragged: props.defaultClassNameDragged ?? 'draggable-dragged',\r\n    defaultPosition: props.defaultPosition !== undefined ? props.defaultPosition : {x: 0, y: 0},\r\n    positionOffset: props.positionOffset !== undefined ? props.positionOffset : {x: '0%', y: '0%'},\r\n    position: props.position !== undefined ? props.position : {x: 0, y: 0},\r\n    axis: props.axis !== undefined ? props.axis : 'both',\r\n  }\r\n\r\n  const [ state, setState ] = useState({\r\n    dragging: false,\r\n    dragged: false,\r\n    // Current transform x and y\r\n    x: props.defaultPosition?.x || props.position?.x || args.position.x ,\r\n    y: props.defaultPosition?.y || props.position?.y || args.position.y ,\r\n    //prevPropsPosition: {...position},\r\n  });\r\n\r\n  // TODO: onDrag to change state and thus style would change\r\n  // this will insert and change prop.onDrag  and pass to DraggableCore\r\n  function onDragStart(e: MouseEvent, coreData: DraggableData) {\r\n    // Shourt-circuit if user's callback killed it.\r\n    const shouldStart = args.onStart(e, createDraggableData(state, args.scale, coreData))\r\n    // Kills start event on core as well, so move handlers are never bound\r\n    if (shouldStart === false) return false;\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      dragging: true,\r\n      dragged: true,\r\n    }))\r\n  }\r\n\r\n  function onDrag(e: MouseEvent, coreData: DraggableData) {\r\n\r\n    if (!state.dragging) return false\r\n    const uiData = createDraggableData(state, args.scale, coreData);\r\n\r\n    const newState = {\r\n      x: uiData.x, \r\n      y: uiData.y,\r\n    }\r\n\r\n    // Short-circuit if user's callback killed it.\r\n    const shouldUpdate = args.onDrag(e, uiData);\r\n    if (shouldUpdate === false) return false;\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      ...newState\r\n    }))\r\n  }\r\n\r\n  function onDragStop(e: MouseEvent, coreData: DraggableData) {\r\n    \r\n    if (!state.dragging) return\r\n\r\n    // Shourt-circuit if user's callback killed it.\r\n    const shouldContinue = args.onStop(e, createDraggableData(state, args.scale, coreData));\r\n    if (shouldContinue === false) return false;\r\n    \r\n    const newState: {\r\n      dragging: boolean, \r\n      x?: number,\r\n      y?: number\r\n    } = {\r\n      dragging: false,\r\n    }\r\n\r\n    // TODO: since default props, wether draggable set position or not, this will always be controlled component\r\n    // If this is a controlled component, the result of this operation will be to\r\n    // revert back to the old position. We expect a handler on `onDragStop`, at the least.\r\n    const controlled = Boolean(props.position !== undefined)\r\n    if (controlled) {\r\n      const {x, y} = args.position\r\n      newState.x = x;\r\n      newState.y = y\r\n    }\r\n    \r\n    setState(prev => ({\r\n      ...prev, \r\n      ...newState\r\n    }))\r\n  }\r\n\r\n  // TODO: since default props, wether draggable set position or defaultposition or not, this will always be controlled component\r\n  // If this is controlled, we don't want to move it -- unless it's dragging.\r\n  const controlled = Boolean(props.position !== undefined)\r\n  const draggable = !controlled || state.dragging\r\n  let validPosition = props.position || props.defaultPosition;\r\n  if (validPosition === undefined) validPosition = args.position\r\n\r\n  const transformOpts = {\r\n    // props when draggable only horizontally or vertically \r\n    x: canDragX(args.axis) && draggable ? state.x : validPosition.x,\r\n    y: canDragY(args.axis) && draggable ? state.y : validPosition.y,\r\n  }\r\n  \r\n  const style = createCSSTransform(transformOpts, args.positionOffset);\r\n\r\n  // Mark w/ class while dragging\r\n  let className = args.defaultClassName\r\n  if (state.dragging) className += ' ' + args.defaultClassNameDragging\r\n  if (state.dragged) className += ' ' + args.defaultClassNameDragged\r\n  if (args.children.props.className) className += ' ' + args.children.props.className\r\n\r\n  return (\r\n    <DraggableCore\r\n      onStart={onDragStart}\r\n      onDrag={onDrag}\r\n      onStop={onDragStop}\r\n      forwardedRef={args.forwardedRef}\r\n    >\r\n      {React.cloneElement(React.Children.only(args.children), {\r\n        className: className,\r\n        style: { ...args.children.props.style, ...style },\r\n      })}\r\n    </DraggableCore>\r\n  );\r\n}","import React from \"react\";\r\nimport { cancellablePromiseObj, cancellablePromise } from \"../utils/cancellablePromise\";\r\n\r\n// const noop = () => {};\r\nconst delay = (n: number) => new Promise((resolve) => setTimeout(resolve, n));\r\n\r\nexport function useClickPreventionOnDoubleClick(\r\n  onClick: () => void,\r\n  onDoubleClick: () => void\r\n) {\r\n  const api = useCancellablePromises();\r\n\r\n  const handleClick = () => {\r\n    api.clearPendingPromise();\r\n    const waitForClick = cancellablePromise(delay(300));\r\n    api.appendPendingPromise(waitForClick);\r\n\r\n    return waitForClick.promise\r\n      .then(() => {\r\n        api.removePendingPromise(waitForClick);\r\n        onClick();\r\n      })\r\n      .catch((errInfo) => {\r\n        api.removePendingPromise(waitForClick);\r\n        if (!errInfo.isCanceled) throw errInfo.error;\r\n      });\r\n  };\r\n\r\n  const handleDoubleClick = () => {\r\n    api.clearPendingPromise();\r\n    onDoubleClick();\r\n  };\r\n\r\n  return [handleClick, handleDoubleClick];\r\n}\r\n\r\n\r\nfunction useCancellablePromises() {\r\n  const pendingPromises = React.useRef([] as cancellablePromiseObj[]);\r\n\r\n  const appendPendingPromise = (promise: cancellablePromiseObj) => {\r\n    pendingPromises.current = [...pendingPromises.current, promise];\r\n  };\r\n\r\n  const removePendingPromise = (promise: cancellablePromiseObj) => {\r\n    pendingPromises.current = pendingPromises.current.filter(\r\n      (p) => p !== promise\r\n    );\r\n  };\r\n\r\n  const clearPendingPromise = () =>\r\n    pendingPromises.current.map((p) => p.cancel());\r\n\r\n  const api = {\r\n    appendPendingPromise,\r\n    removePendingPromise,\r\n    clearPendingPromise,\r\n  };\r\n  return api;\r\n}","export type cancellablePromiseObj = {\r\n  promise: Promise<unknown>;\r\n  cancel: () => boolean;\r\n};\r\n\r\nexport const cancellablePromise = (\r\n  promise: Promise<unknown>\r\n): cancellablePromiseObj => {\r\n  let isCanceled = false;\r\n\r\n  const wrappedPromise = new Promise((resolve, reject) => {\r\n    promise.then(\r\n      (value) => (isCanceled ? reject({ isCanceled, value }) : resolve(value)),\r\n      (error) => reject({ isCanceled, error })\r\n    );\r\n  });\r\n  \r\n  return {\r\n    promise: wrappedPromise,\r\n    cancel: () => (isCanceled = true),\r\n  };\r\n};","import React, { useContext, useState, useRef, ReactElement } from 'react'\r\nimport { DagContext } from '../contexts/DagContext'\r\nimport { useClickPreventionOnDoubleClick } from '../hooks/useCancellablePromises'\r\n\r\ntype RenameProps = {\r\n  initName: string,\r\n  children: ReactElement,\r\n}\r\n\r\nfunction Rename({ initName, children }: RenameProps) {\r\n\r\n  const [dag, setDag] = useContext(DagContext)\r\n  const [value, setValue] = useState(dag.vertices[initName].value ?? initName)\r\n  const formInputField = useRef<HTMLInputElement>(null)\r\n  const onClick = () => {}\r\n  const onDoubleClick = () => { \r\n    if (formInputField.current) {\r\n      formInputField.current.focus()\r\n      formInputField.current.setSelectionRange(0, value.length)\r\n    }\r\n  }\r\n  const [handleClick, handleDoubleClick] = useClickPreventionOnDoubleClick(onClick, onDoubleClick)\r\n\r\n  function submitHandler(e: React.FormEvent) {\r\n    e.preventDefault()\r\n    setDag.appendVertexValue(initName, value)\r\n    if (formInputField.current) formInputField.current.blur()\r\n  }\r\n\r\n  function preventSelect(e: React.MouseEvent) {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", width: \"100%\" }} onClick={handleClick} onDoubleClick={handleDoubleClick}>\r\n      <form onSubmit={submitHandler} >\r\n        <input ref={formInputField} type=\"text\" value={value} onChange={e => { setValue(e.target.value) }} onMouseDown={e => preventSelect(e)}></input>\r\n      </form>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rename\r\n","import { useEffect, useState } from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Draggable from \"../Draggble/Draggable\";\r\nimport { DraggableData } from \"../Draggble/types\";\r\nimport { arrowStyle, RefsArrows } from \"../../ts/types/app_types\"\r\nimport { useDrawConnectorDynamic } from \"../hooks/useDrawSVGConnector\"\r\nimport Rename from \"./Rename\";\r\n\r\nexport default function Vertex(props: {\r\n  name: string;\r\n  arrowStyleOpt: arrowStyle;\r\n  location: [number, number];\r\n  forwardedRef: React.RefObject<HTMLDivElement>;\r\n  forwardedArrowsRefs: RefsArrows;\r\n}) {\r\n  const { name, arrowStyleOpt, location, forwardedRef, forwardedArrowsRefs } = props;\r\n  const [row, column] = location;\r\n  const [topPosition, leftPosition] = [150 + 150 * row, 150 * column];\r\n  const [topStyle, leftStyle] = [topPosition + \"px\", leftPosition + \"px\"];\r\n  const [state, setState] = useState({\r\n    activeDrags: 0,\r\n    deltaPosition: { x: 0, y: 0 },\r\n    controlledPosition: { x: -400, y: 200 } //TODO\r\n  })\r\n  const { drawConnectorDynamic } = useDrawConnectorDynamic(arrowStyleOpt)\r\n  const relatedArrows = relatedArrowsDetector(forwardedArrowsRefs, name);\r\n\r\n  const handleDrag = (e: MouseEvent, ui: DraggableData) => {\r\n    const { x, y } = state.deltaPosition\r\n    setState(prev => ({\r\n      ...prev,\r\n      deltaPosition: {\r\n        x: x + ui.deltaX,\r\n        y: y + ui.deltaY,\r\n      }\r\n    }))\r\n    drawConnectorDynamic(relatedArrows, name, { x: ui.deltaX, y: ui.deltaY })\r\n  }\r\n  const onStart = () => setState(prev => ({ ...prev, activeDrags: state.activeDrags + 1 }));\r\n  const onStop = () => setState(prev => ({ ...prev, activeDrags: state.activeDrags - 1 }));\r\n\r\n  const dragHandlers = { onStart: onStart, onStop: onStop };\r\n\r\n  let posn = {\r\n    position: `absolute`,\r\n    // top: `${topStyle}`,\r\n    // left: `${leftStyle}`,\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(forwardedRef);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Draggable\r\n        {...dragHandlers}\r\n        onDrag={handleDrag}\r\n        forwardedRef={forwardedRef}\r\n        positionOffset={{ x: '0%', y: '0%' }}\r\n        defaultPosition={{ x: leftPosition, y: topPosition }}\r\n        defaultClassName={`draggable-${name}`}\r\n      >\r\n        <S.Container posn={posn} ref={forwardedRef} id={name}>\r\n          <Rename initName={name} >\r\n            <>\r\n              <span> {name} </span>\r\n              <br />\r\n              {/* {`x: ${state.deltaPosition.x.toFixed(0)}, y: ${state.deltaPosition.y.toFixed(0)}`} */}\r\n            </>\r\n          </Rename>\r\n        </S.Container>\r\n      </Draggable>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// 不能 Hoist 到 vertex 以上的層級，因為要等 arrow 畫出來才有辦法存取到  arrows refs\r\nfunction relatedArrowsDetector(forwardedArrowsRefs: RefsArrows, vertexName: string) {\r\n  let relatedArrows: RefsArrows = forwardedArrowsRefs.filter((arrow) => {\r\n    if (!arrow.current) return // initial render, ref would not access dom\r\n    const pathEle = arrow.current;\r\n    return (\r\n      pathEle && (pathEle.getAttribute(\"data-vertex_from\") === vertexName ||\r\n        pathEle.getAttribute(\"data-vertex_to\") === vertexName)\r\n    );\r\n  });\r\n  return relatedArrows;\r\n};","import { IdagData } from \"../dag/types\";\r\nimport { arrowStyle, RefsArrows, RefsDiv } from \"../ts/types/app_types\";\r\n\r\nimport Vertex from \"./Vertex/Vertex\";\r\n\r\ntype vertexRendererParas = {\r\n  dag: IdagData;\r\n  refs: [React.MutableRefObject<RefsDiv>, React.MutableRefObject<RefsArrows>]; // [...{current: [..., {current: Ele} ]}]\r\n  arrowStyleOpt: arrowStyle;\r\n};\r\n\r\nexport default function vertexRenderer({\r\n  dag,\r\n  refs,\r\n  arrowStyleOpt,\r\n}: vertexRendererParas) {\r\n  const [rank, topSorted] = [dag.rank, dag.topSorted]\r\n  if (!rank || !topSorted) return;\r\n  const graphHeight = rank[`${topSorted[0]}`];\r\n  const rowProcssedTimes: { [key: number]: number } = {}; //作為每一行div是否render過的計數器\r\n  const [refsDivs, refsArrows] = refs;\r\n\r\n  return (\r\n    // 按照拓墣排序迭代每個 vertex，同時紀錄他們所在階層 currentRow\r\n    topSorted.map((name, i) => {\r\n      let row = graphHeight - rank[name]; // 代表該 vertex name 在第幾行\r\n      rowProcssedTimes[row] = rowProcssedTimes[row] + 1 || 1; // Record to kwow current vertex is in n'th column\r\n      let column = rowProcssedTimes[row];\r\n\r\n      return (\r\n        <Vertex\r\n          name={name}\r\n          arrowStyleOpt={arrowStyleOpt}\r\n          key={name}\r\n          location={[row, column]}\r\n          forwardedRef={refsDivs.current[i]}\r\n          forwardedArrowsRefs={refsArrows.current}\r\n        />\r\n      );\r\n    })\r\n  );\r\n}","import styled from \"styled-components\";\r\n\r\nconst dropDownHeight = '4'\r\nconst optionsHeight = '10'\r\nconst unit = 'rem'\r\n\r\nexport const Dropdown = styled.div`\r\n  color: ${( {theme}) => theme.text};\r\n  border: solid;\r\n  border-radius: 5px;\r\n  height: ${dropDownHeight + unit};\r\n  width: 8rem;\r\n  position: absolute;\r\n  left: 1rem;\r\n  bottom: 1rem;\r\n  /* glassmorphism */\r\n  background: ${( {theme} ) => theme.select};\r\n  box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\r\n  backdrop-filter: blur( 4px );\r\n  border-radius: 10px;\r\n  border: 1px solid rgba( 255, 255, 255, 0.18 );\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  p {\r\n    padding: 1.3rem;\r\n  }\r\n\r\n  .options {\r\n    position: absolute;\r\n    top: -${optionsHeight + unit};\r\n    height: ${optionsHeight + unit};\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    \r\n    div {\r\n      background-color: ${( {theme} ) => theme.option};\r\n      /* glassmorphism */\r\n      box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\r\n      backdrop-filter: blur( 4px );\r\n      border-radius: 10px;\r\n      border: 1px solid rgba( 255, 255, 255, 0.18 );\r\n      margin: 0.5rem;\r\n\r\n      &:hover {\r\n        transform: translate(-0.2rem, -0.2rem);\r\n      }\r\n\r\n      &.option-mouse-down {\r\n        transform: scale(0.95);\r\n      }\r\n\r\n      /* TODO: svg path not align with viewpoint */\r\n      svg {\r\n        marker#arrowhead {\r\n          fill: ${( {theme} ) => theme.text}\r\n        }\r\n        \r\n        & g {\r\n          stroke: ${( {theme} ) => theme.text}\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .collapseAria {\r\n    transform: translateX(-2rem);\r\n    width: 0;\r\n    opacity: 0;\r\n    transition-property: width, opacity, transform;\r\n    transition-duration: 0.5s, 0.5s, 0.5s;\r\n    transition-timing-function: linear, ease-out, linear;\r\n  }\r\n  \r\n  .expandAria {\r\n    transform: translateX(0);\r\n    width: 25vw;\r\n    opacity: 1;\r\n    transition-property: width, opacity, transform;\r\n    transition-duration: 0.5s, 1s, 0.5s;\r\n    transition-timing-function: linear, ease-in, linear;\r\n  }\r\n`","import React, { useState, useRef } from 'react'\r\nimport { arrowStyle } from '../../ts/types/app_types'\r\nimport * as S from './style'\r\n\r\ntype selectArrowStyleProps = {\r\n  styleOpt: arrowStyle\r\n  setStyleOpt: React.Dispatch<React.SetStateAction<arrowStyle>>\r\n}\r\n\r\n\r\nfunction SelectArrowStyle({ styleOpt, setStyleOpt }: selectArrowStyleProps) {\r\n\r\n  //TODO: svg path not alignt with window viewpoint\r\n  const [showOptions, setShowOptions] = useState(false)\r\n\r\n  const mouseDownEffect = (e: React.MouseEvent) => {\r\n    const option = e.currentTarget\r\n    option.classList.add(\"option-mouse-down\")\r\n  }\r\n\r\n  const mouseUpEffect = (e: React.MouseEvent) => {\r\n    const option = e.currentTarget\r\n    if (option.classList.contains(\"option-mouse-down\")) {\r\n      option.classList.remove(\"option-mouse-down\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <S.Dropdown onMouseEnter={() => setShowOptions(true)} onMouseLeave={() => setShowOptions(false)}>\r\n        <p> Arrow style </p>\r\n        <div className={`options ${showOptions ? \"expandAria\" : \"collapseAria\"}`} data-aria-expend={showOptions}>\r\n          <div onClick={() => setStyleOpt(\"CURVE\")} onMouseDown={e => mouseDownEffect(e)} onMouseUp={e => mouseUpEffect(e)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n              <defs>\r\n                <marker\r\n                  id=\"arrowhead\"\r\n                  viewBox=\"0 0 10 10\"\r\n                  refX=\"3\"\r\n                  refY=\"5\"\r\n                  markerWidth=\"6\"\r\n                  markerHeight=\"6\"\r\n                  orient=\"auto\"\r\n                >\r\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n                </marker>\r\n              </defs>\r\n              <g\r\n                fill=\"none\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n                markerEnd=\"url(#arrowhead)\"\r\n              >\r\n                <path d=\"M80,20 C15,20 15,120 80,120\" />\r\n              </g>\r\n            </svg>\r\n          </div>\r\n          <div onClick={() => setStyleOpt(\"STRAIGHT\")} onMouseDown={e => mouseDownEffect(e)} onMouseUp={e => mouseUpEffect(e)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n              <defs>\r\n                <marker\r\n                  id=\"arrowhead\"\r\n                  viewBox=\"0 0 10 10\"\r\n                  refX=\"3\"\r\n                  refY=\"5\"\r\n                  markerWidth=\"6\"\r\n                  markerHeight=\"6\"\r\n                  orient=\"auto\"\r\n                >\r\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n                </marker>\r\n              </defs>\r\n              <g\r\n                fill=\"none\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n                markerEnd=\"url(#arrowhead)\"\r\n              >\r\n                <path d=\"M65,20 65,115\" />\r\n              </g>\r\n            </svg>  \r\n          </div>\r\n        </div>\r\n      </S.Dropdown>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SelectArrowStyle\r\n","\r\nimport React, { useRef, useContext, useState } from \"react\";\r\nimport { IdagData } from \"../dag/types\"\r\nimport { RefsArrows, RefsDiv } from \"../ts/types/app_types\";\r\nimport { PositionContext } from \"./contexts/PositionContext\"\r\nimport arrowRenderer from \"./ArrowRenderer\";\r\nimport vertexRenderer  from './VertexRenderer'\r\nimport arrowsInfoGetter from \"./utils/arrowsInfoGetter\";\r\nimport SelectArrowStyle from \"./SelectArrowStyle/SelectArrowStyle\";\r\nimport { arrowStyle } from '../ts/types/app_types'\r\ntype DrawGraphProps = {\r\n  dag: IdagData,\r\n  topSorted: string[]\r\n}\r\n\r\n\r\nexport default function DrawGraph({ dag, topSorted }: DrawGraphProps) {\r\n  \r\n  const [positionMap, setPositionMap] = useContext(PositionContext)\r\n  let [arrowsMap, arrowsNumber] = arrowsInfoGetter(dag)\r\n\r\n  const refsDivs = useRef<RefsDiv>([]);\r\n  const refsArrows = useRef<RefsArrows>([]);\r\n  refsDivs.current = [...new Array(topSorted.length)].map(() => React.createRef());\r\n  refsArrows.current = [...new Array(arrowsNumber)].map(() => React.createRef());\r\n\r\n  const [arrowStyleOpt, setArrowStyleOpt] = useState<arrowStyle>('CURVE')\r\n  /** test block */\r\n  // useEffect(() => {\r\n  //   setPositionMap({\r\n  //     \"test\": {\r\n  //       posnOrigin: [2, 5],\r\n  //       posnNew: [4, 5],\r\n  //       translate: { x: 4, y: 3 }\r\n  //     }\r\n  //   })\r\n  // }, [])\r\n\r\n  return (\r\n    <>\r\n      <p className=\"instructions\">\r\n        Drag items\r\n        <br/>\r\n        Double click items to change title / name\r\n      </p>\r\n      <div className=\"graph-wrapper\" >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              viewBox=\"0 0 10 10\"\r\n              refX=\"3\"\r\n              refY=\"5\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"6\"\r\n              orient=\"auto\"\r\n            >\r\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n            </marker>\r\n          </defs>\r\n          {arrowRenderer({dag, refs: [refsDivs, refsArrows], arrowStyleOpt})}\r\n        </svg>\r\n          {vertexRenderer({\r\n            dag,\r\n            refs: [refsDivs, refsArrows],\r\n            arrowStyleOpt\r\n          })}\r\n      </div>\r\n      <SelectArrowStyle styleOpt={arrowStyleOpt} setStyleOpt={setArrowStyleOpt} />\r\n    </>\r\n  )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  width: 8rem;\r\n  position: absolute;\r\n  right: 300px;\r\n  bottom: 2rem;\r\n\r\n  label {\r\n    color: ${( {theme}) => theme.text};\r\n  }\r\n\r\n  input {\r\n    color: ${( {theme}) => theme.text};\r\n    width: 8rem;\r\n    height: 1.5rem;\r\n    font-size: 1.08rem;\r\n    text-align: center;\r\n\r\n    /* glassmorphism */\r\n    background: ${( {theme} ) => theme.select};\r\n    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\r\n    backdrop-filter: blur( 4px );\r\n    border-radius: 4px;\r\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\r\n\r\n    &::placeholder {\r\n      color: ${( {theme}) => theme.text};\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport * as S from './style'\r\n\r\ntype DeleteVertexProps = {\r\n  deleteVertex: (target: string) => void,\r\n}\r\n\r\n\r\nfunction DeleteVertex({ deleteVertex }: DeleteVertexProps) {\r\n\r\n  const [target, setTarget] = useState('')\r\n\r\n  function submitHandler(e: React.FormEvent) {\r\n    e.preventDefault()\r\n    deleteVertex(target)\r\n    setTarget('')\r\n  }\r\n\r\n  return (\r\n    <S.Form onSubmit={submitHandler}>\r\n      <label> Delete by tag : </label>\r\n      <input \r\n        name=\"vertex\" \r\n        value={target} \r\n        placeholder=\"🡪 a\"\r\n        onChange={e => { setTarget(e.target.value) }} />\r\n    </S.Form>\r\n  )\r\n}\r\n\r\nexport default DeleteVertex\r\n","import styled from \"styled-components\";\r\n\r\nexport const Vertex_input = styled.div`\r\n  position: fixed;\r\n  right: 2rem;\r\n  bottom: 2rem;\r\n  padding: 1.5rem;\r\n\r\n  /* glassmorphism */\r\n  background: ${( {theme} ) => theme.select};\r\n  box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\r\n  backdrop-filter: blur( 8px );\r\n  border-radius: 4px;\r\n  border: 1px solid rgba( 255, 255, 255, 0.18 );\r\n`\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({theme})=> theme.text};\r\n\r\n  label {\r\n    width: 10rem;\r\n  }\r\n\r\n  input {\r\n    color: ${( {theme}) => theme.text};\r\n    width: 10rem;\r\n    height: 1.5rem;\r\n    font-size: 1.08rem;\r\n    text-align: center;\r\n    margin: 0 0 1rem 0;\r\n\r\n    /* glassmorphism -- upper layer*/\r\n    background: ${( {theme} ) => theme.select};\r\n    border-radius: 4px;\r\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\r\n\r\n    &::placeholder {\r\n      color: ${( {theme}) => theme.text};\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 0.5rem;\r\n  padding: 5px 0 5px 0;\r\n  font-size: 1.3rem;\r\n  width: 10rem;\r\n\r\n  /* glassmorphism -- upper layer*/\r\n  background: ${( {theme} ) => theme.button};\r\n  border-radius: 4px;\r\n  border: 1px solid rgba( 255, 255, 255, 0.18 );\r\n\r\n  color: ${( {theme}) => theme.text};\r\n\r\n  &.btn-mouse-down{\r\n    transform: scale(0.95)\r\n  }\r\n`","import React, { useState, useContext } from 'react'\r\nimport { input } from \"../../ts/types/app_types\";\r\nimport * as S from \"./styles\"\r\n\r\ntype VertexInputProps = {\r\n  createVertex: ({}: input) => boolean;\r\n}\r\n\r\nexport default function VertexInput({createVertex}: VertexInputProps) {\r\n\r\n  const [vertex, setVertex] = useState('')\r\n  const [incomming, setIncomming] = useState('')\r\n  const [outgoing, setOutgoing] = useState('')\r\n\r\n  function submitHandler(e: React.FormEvent) {\r\n    e.preventDefault()\r\n    const success = createVertex({\r\n      vertex: vertex,\r\n      incomming: incomming,\r\n      outgoing: outgoing\r\n    })\r\n    if (!success) return\r\n\r\n    setVertex('')\r\n    setIncomming('')\r\n    setOutgoing('')\r\n  }\r\n\r\n  const mouseDownEffect = (e: React.MouseEvent) => {\r\n    const btn = e.currentTarget\r\n    btn.classList.add(\"btn-mouse-down\")\r\n  }\r\n\r\n  const mouseUpEffect = (e: React.MouseEvent) => {\r\n    const btn = e.currentTarget\r\n    if (btn.classList.contains(\"btn-mouse-down\")) {\r\n      btn.classList.remove(\"btn-mouse-down\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <S.Vertex_input>\r\n        <S.Form onSubmit={submitHandler}>\r\n          <label>Incomming Note Tag</label>\r\n          <input name=\"incomming\" placeholder=\"🡪 a, b, c ...\" value={incomming} onChange={e => { setIncomming(e.target.value) }} />\r\n\r\n          <label>Tag Name</label>\r\n          <input name=\"vertex\" value={vertex} placeholder=\"🡪 d (must)\" onChange={e => { setVertex(e.target.value) }} />\r\n\r\n          <label>Outgoing Note Tag</label>\r\n          <input name=\"outgoing\" value={outgoing} placeholder=\"🡪 e, f, g ...\" onChange={e => { setOutgoing(e.target.value) }} />\r\n\r\n          <S.Button onMouseDown={e => mouseDownEffect(e)} onMouseUp={e => mouseUpEffect(e)}>Create !</S.Button>\r\n        </S.Form>\r\n      </S.Vertex_input>\r\n    </>\r\n  )\r\n}","import styled from \"styled-components\";\r\n\r\ninterface Itip {\r\n  show: boolean\r\n}\r\n\r\n\r\n\r\nexport const Icon = styled.span`\r\n  position: absolute;\r\n  right: 450px;\r\n  bottom: 2rem;\r\n  width: auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  opacity: 0.7;\r\n\r\n  &.clicked {\r\n    transform: translate(2px, 2px);\r\n    transition: all 0.1s linear;\r\n    opacity: 1;\r\n  }\r\n  \r\n  svg {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nexport const toolTip = styled.div<Itip>`\r\n  position: absolute;\r\n  right: 50rem;\r\n  bottom: 10rem;\r\n  color: ${({ theme }) => theme.text};\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: absolute;\r\n    width: 30rem;\r\n    opacity:  ${(props) => props.show ? `1` : `0`};\r\n    border: solid 1px;\r\n    border-radius: 12px;\r\n    padding: 12px 0 12px 0;\r\n\r\n      /*\r\n      To Prevent user selectin inside the drag source\r\n      */\r\n      user-select: none;\r\n      -moz-user-select: none;\r\n      -webkit-user-select: none;\r\n      -ms-user-select: none;\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport * as S from './style'\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\ntype ResetDagProps = {\r\n  reset: () => void\r\n}\r\n\r\nfunction ResetDag(props: ResetDagProps) {\r\n  const { reset } = props\r\n  const [showTip, setShowTip] = useState(false)\r\n\r\n  function mouseDownHandler(e: React.MouseEvent) {\r\n    const icon = e.currentTarget\r\n    icon.classList.add(\"clicked\")\r\n  }\r\n  \r\n  function mouseUpHandler(e: React.MouseEvent) {\r\n    const icon = e.currentTarget\r\n    if (icon.classList.contains(\"clicked\")) {\r\n      icon.classList.remove(\"clicked\")\r\n    }\r\n    reset()\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <S.Icon \r\n        onMouseDown={e => mouseDownHandler(e)}\r\n        onMouseUp={e => mouseUpHandler(e)}\r\n        onMouseEnter={() => setShowTip(true)} \r\n        onMouseLeave={() => setShowTip(false)}>\r\n        <FaTrash size={2} style={{ height: \"45px\", width: \"45px\" }} />\r\n      </S.Icon>\r\n      <S.toolTip show={showTip}>\r\n        <div>\r\n          {showTip\r\n            ? <div>\r\n              We use local storage to keep data between sessions.\r\n              <br /> Click me to delete all storage before creating new graph !\r\n            </div>\r\n            : null\r\n          }\r\n        </div>\r\n      </S.toolTip>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default ResetDag\r\n","import { useContext } from 'react'\r\nimport { DagContext } from './contexts/DagContext';\r\nimport DrawGraph from './DrawGraph';\r\nimport DeleteVertex from './DeleteVertex/DeleteVertex';\r\nimport VertexInput from \"./InputForm/VertexInput\";\r\nimport ResetDag from './ResetDag/ResetDag';\r\n\r\n\r\nfunction GraphMiddleWare() {\r\n\r\n  const [dag, setDag] = useContext(DagContext)\r\n\r\n  return (\r\n    <>\r\n      <DrawGraph dag={dag} topSorted={dag.topSorted} />\r\n      <VertexInput createVertex={setDag.createVertex} />\r\n      <DeleteVertex deleteVertex={setDag.deleteVertex} />\r\n      <ResetDag reset={setDag.resetDag}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GraphMiddleWare;","import TogglerButton from './components/TogglerButton/ToggleButton';\nimport GlobalStyle from './components/styles/global'\nimport ThemeContext from './components/contexts/ThemeContext';\nimport { useThemeMode } from './components/hooks/useThemeMode';\n\nimport { PositionContextProvider } from \"./components/contexts/PositionContext\";\nimport { DagContextProvider } from \"./components/contexts/DagContext\";\n\nimport GraphMiddleWare from './components/GraphMiddleWare';\nimport { useDagStorage } from './components/hooks/useDagStorage';\n\nimport { FaGithub } from 'react-icons/fa'\n\nfunction App() {\n\n  const { theme, themeToggler } = useThemeMode();\n  const { dagStorage, setlocalStorage } = useDagStorage();\n\n  return (\n    <ThemeContext theme={theme}>\n\n      <GlobalStyle />\n      <div className=\"toggler\">\n        <TogglerButton themeToggler={themeToggler} />\n        <div>\n          <h1>{theme}</h1>\n        </div>\n        <a href=\"https://github.com/benson00077/dag_graph-ts\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <FaGithub style={{ height: \"25px\", width: \"25px\", opacity: \"0.5\" }}></FaGithub>\n        </a>\n      </div>\n\n      <DagContextProvider setlocalStorage={setlocalStorage}>\n        <PositionContextProvider>\n          <GraphMiddleWare />\n        </PositionContextProvider>\n      </DagContextProvider>\n\n    </ThemeContext>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useThemeMode = () => {\r\n  const [ theme, setTheme ] = useState('dark')\r\n\r\n  const setMode = (mode: string) => {\r\n    window.localStorage.setItem('theme', mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const themeToggler = () => (theme === 'dark' ? setMode('light'): setMode('dark'));\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('theme'); // could be null\r\n    localTheme && setTheme(localTheme)\r\n  }, [])\r\n\r\n  return { theme, themeToggler }\r\n};\r\n","import { useEffect, useState }  from 'react'\r\n\r\nexport const useDagStorage = () => {\r\n  const [dagStorage, setDagStorage] = useState('')\r\n\r\n  const setlocalStorage = (dagData: string) => {\r\n    window.localStorage.setItem('dagData', dagData)\r\n    setDagStorage(dagData)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const localDagStorage = window.localStorage.getItem('dagData') // could be null\r\n    localDagStorage && setDagStorage(localDagStorage)\r\n  })\r\n  \r\n  return { dagStorage, setlocalStorage }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}