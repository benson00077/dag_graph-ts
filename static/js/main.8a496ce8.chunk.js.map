{"version":3,"sources":["components/TogglerButton/styles.ts","components/TogglerButton/ToggleButton.tsx","components/styles/global.ts","components/styles/themes.ts","components/contexts/ThemeContext.tsx","components/contexts/PositionContext.tsx","dag/graphClass.ts","dag/dagClass.ts","components/utils/inputParser.ts","components/contexts/DagContext.tsx","components/utils/arrowsInfoGetter.ts","components/utils/svgPathHandler.ts","components/hooks/useDrawSVGConnector.ts","components/Arrow/Arrow.tsx","components/ArrowRenderer.tsx","components/Vertex/styles.ts","components/Draggble/domFns.ts","components/Draggble/positionFns.ts","components/Draggble/DraggableCore.tsx","components/Draggble/Draggable.tsx","components/hooks/useCancellablePromises.ts","components/utils/cancellablePromise.ts","components/Vertex/Rename.tsx","components/Vertex/Vertex.tsx","components/VertexRenderer.tsx","components/SelectArrowStyle/style.ts","components/SelectArrowStyle/SelectArrowStyle.tsx","components/DrawGraph.tsx","components/DeleteVertex/style.ts","components/DeleteVertex/DeleteVertex.tsx","components/InputForm/styles.ts","components/InputForm/VertexInput.tsx","components/ResetDag/style.ts","components/ResetDag/ResetDag.tsx","components/GraphMiddleWare.tsx","App.tsx","components/hooks/useThemeMode.ts","components/hooks/useDagStorage.ts","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","theme","background","text","Icons","span","TogglerButton","themeToggler","htmlFor","className","id","type","onClick","onChange","checked","window","localStorage","getItem","style","marginLeft","height","size","globalStyle","createGlobalStyle","withTheme","darkTheme","button","vertexbg","select","option","lightTheme","ThemeContext","children","themeMode","PositionContext","React","createContext","PositionContextProvider","props","useState","positionMap","setPositionMap","Provider","value","Graph","rank","topSorted","result","vertex","path","push","name","this","leafToRoot","reverse","ranking","forEach","i","incomingNames","vertices","nextName","includes","deleteName","filter","item","deleteNameKey","incoming","outGoingMap","Object","entries","from","undefined","length","names","topologySortCaller","visit_giveRank","getOutgoingMap","vertexName","outgoingList","hasOutgoing","deleteFromIncomingArr","deleteFromIncoming","giveRank","hasOwnProperty","add","fn","visited","incomingName","visit","pop","fromName","toName","to","Error","join","before","after","map","addEdge","Array","isArray","beforeName","afterName","seperate","str","split","arrTrim","arr","each","trim","DagContext","DagContextProvider","setlocalStorage","update","setUpdate","dag","_setDag","setDag","createVertex","input","alert","verticesInput","incomming","outgoing","outgoingArr","inputParser","addEdges","err","updateDagLocalStorage","deleteVertex","delete","appendVertexValue","resetDag","mapStr","JSON","stringify","useEffect","prevDagData","parse","repaintPrevDag","arrowsInfoGetter","counter","incommingName","j","SvgPath","ele","command","getAttribute","pathPara","setAttribute","SvgPathEnds","divs","endFrom","x","offsetLeft","y","offsetTop","offsetHeight","endTo","getTrans","number","offsetWidth","getPosnTopButtonEnds","getStraightCommand","moveFrom","LineTo","getPosnLeftEnds","getCurvePathCommand","controlPoint1","controlPoint2","moveTo","CurvesPara","StraightPara","transform","transArr","replace","percentage","useDrawConnectorDynamic","styleOpt","defaultPathMemoizer","drawConnectorDynamic","arrowsRef","translate","arrowRef","indicator","pathRef","current","newPathCommand","prevCommand","prevPara","curvePara","getNewCurvesPathCommnadAfterDrag","straightPara","getNewStraightPathCommandAfterDrag","mount","Arrow","arrowStyleOpt","forwardedRef","forwardedDivsRef","useContext","drawConnectorInitial","ends","pathCommand","getCurveCommand","getStraitCommand","relatedDivs","relatedDivsChecker","fill","stroke","strokeWidth","markerEnd","ref","arrowRenderer","refs","divsRefs","arrowsRefs","arrowsRecord","arrowsNumber","e","posn","top","left","addEvent","event","handler","inputOptions","options","capture","addEventListener","removeEvent","removeEventListener","withControlledNodeRef","node","addUserSelectStyles","doc","el","styleEl","getElementById","createElement","innerHTML","getElementsByTagName","appendChild","body","classList","match","RegExp","removeUserSelectStyles","remove","selection","defaultView","getSelection","removeAllRanges","canDragY","axis","getControlPosition","evt","offsetParent","offsetParentRect","ownerDocument","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","offsetXYFromParent","createCoreData","state","lastX","lastY","deltaX","deltaY","createDraggableData","draggableState","scale","coreData","eventsFor","start","move","stop","dragEventFor","DraggableCore","args","allowAnyClick","disabled","enableUserSelectHack","onStart","onDrag","onStop","onMouseDown","dragging","NaN","setState","handleDragStart","thisNode","position","coreEvent","handleDrag","prev","handleDragStop","MouseEvent","document","createEvent","initMouseEvent","passive","Draggable","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","defaultPosition","positionOffset","dragged","draggable","Boolean","validPosition","contorlPos","translation","unitSuffix","defaultX","defaultY","getTranslation","createCSSTransform","uiData","newState","cloneElement","Children","only","useClickPreventionOnDoubleClick","onDoubleClick","api","pendingPromises","useRef","appendPendingPromise","promise","removePendingPromise","p","clearPendingPromise","cancel","useCancellablePromises","n","waitForClick","isCanceled","Promise","resolve","reject","then","error","cancellablePromise","setTimeout","catch","errInfo","Rename","initName","setValue","formInputField","focus","setSelectionRange","handleClick","handleDoubleClick","width","onSubmit","preventDefault","blur","target","preventSelect","Vertex","location","forwardedArrowsRefs","topPosition","leftPosition","activeDrags","deltaPosition","controlledPosition","relatedArrows","arrow","pathEle","relatedArrowsDetector","dragHandlers","ui","vertexRenderer","graphHeight","rowProcssedTimes","refsDivs","refsArrows","row","column","Dropdown","dropDownHeight","optionsHeight","SelectArrowStyle","setStyleOpt","showOptions","setShowOptions","mouseDownEffect","currentTarget","mouseUpEffect","contains","onMouseEnter","onMouseLeave","onMouseUp","xmlns","viewBox","refX","refY","markerWidth","markerHeight","orient","d","DrawGraph","createRef","setArrowStyleOpt","Form","form","DeleteVertex","setTarget","placeholder","Vertex_input","Button","VertexInput","setVertex","setIncomming","setOutgoing","btn","Icon","toolTip","show","ResetDag","reset","showTip","setShowTip","mouseDownHandler","icon","mouseUpHandler","GraphMiddleWare","App","setTheme","setMode","mode","setItem","localTheme","useThemeMode","dagStorage","setDagStorage","localDagStorage","dagData","useDagStorage","title","href","rel","opacity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a496ce8.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 4rem;\n    height: 1.5rem;\n  }\n\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${({ theme }) => theme.background};\n    -webkit-transition: 0.2s;\n    transition: 0.2s;\n    box-shadow: 0 0 2px ${({ theme }) => theme.text};\n  }\n\n  .slider:before {\n    position: absolute;\n    content: '';\n    height: 14px;\n    width: 14px;\n    left: 7px;\n    bottom: 5px;\n    background-color: ${({ theme }) => theme.background};\n    -webkit-transition: 0.2s;\n    transition: 0.2s;\n  }\n\n  input:checked + .slider {\n    background-color: ${({ theme }) => theme.background};\n  }\n\n  input:checked + .slider:before {\n    -webkit-transform: translateY(35px);\n    -ms-transform: translateX(35px);\n    transform: translateX(35px);\n  }\n\n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 34px;\n  }\n\n  .slider.round:before {\n    border-radius: 50%;\n  }\n`\n\nexport const Icons = styled.span`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  top: 25%;\n  align-items: center;\n\n  svg {\n    color: ${({ theme }) => theme.text};\n    z-index: 11;\n  }\n`\n","import { HiMoon } from 'react-icons/hi'\nimport { FaSun } from 'react-icons/fa'\nimport * as S from './styles'\n\ntype ThemeTogglerProps = {\n  themeToggler: () => void\n}\n\nfunction TogglerButton({ themeToggler }: ThemeTogglerProps) {\n  return (\n    <S.Container>\n      <label htmlFor=\"checkbox\" className=\"switch\">\n        <input\n          id=\"checkbox\"\n          type=\"checkbox\"\n          onClick={themeToggler}\n          onChange={() => false}\n          checked={window.localStorage.getItem('theme') === 'light'}\n        />\n        <S.Icons className=\"slider round\">\n          {window.localStorage.getItem('theme') !== 'light' ? (\n            <>\n              <HiMoon style={{ marginLeft: '6.3px', height: '10px' }} />\n            </>\n          ) : (\n            <>\n              <FaSun size={0} style={{ marginLeft: '41px', height: '10px' }} />\n            </>\n          )}\n        </S.Icons>\n      </label>\n    </S.Container>\n  )\n}\n\nexport default TogglerButton\n","import { createGlobalStyle, withTheme } from 'styled-components'\nimport { ThemeProps } from './themes'\n\ntype GlobalThemeProps = {\n  theme: ThemeProps\n}\n\nconst globalStyle = createGlobalStyle`\n  :root {\n    //dark-mode\n    --dark-background: #1A1B27;\n    --dark-text: #F5F5F7;\n    --dark-button: rgba(0, 0, 0, 0.25);\n    --dark-vertexbg: #a371f7;\n    --dark-select: rgba(0, 0, 0, 0.25);\n    --dark-option: rgba(0, 0, 0, 0.9);\n\n    //light-mode\n    --light-background: #E7EAED; //#f2f2f2;\n    --light-text: #2E0509;\n    --light-button: rgba( 7,  89, 133, 0.35 ); //#007aff;\n    --light-vertexbg: #007aff;\n    --light-select: rgba( 7,  89, 133, 0.35 );\n    --light-option: rgba( 7,  89, 133, 0.9 ); //rgba(255, 255, 255, 0.9);\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  html body {\n    -webkit-font-smoothing: antialiased;\n    font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n    font-weight: 500;\n    height: 100vh;\n    width: 85vw;\n    margin: 0 auto;\n    background-color: ${({ theme }: GlobalThemeProps) => theme.background};\n  }\n\n  .toggler {\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    h1 {\n      font-size: 1.5rem; //3.375rem;\n      color: ${({ theme }: GlobalThemeProps) => theme.text}\n    }\n\n    & > a svg {\n      color: ${({ theme }: GlobalThemeProps) => theme.text};\n    }\n  }\n\n  .instructions {\n    padding: 1rem 0 1rem 0;\n    color: ${({ theme }: GlobalThemeProps) => theme.text}\n  }\n\n  .graph-wrapper {\n    position: relative;\n    height: 85vh;\n    border: solid 1px black;\n    border-radius: 15px;\n\n    svg{\n      position: absolute;\n      height: 100%; // temp\n      width: 100%;\n    \n      marker#arrowhead {\n        fill: ${({ theme }) => theme.text}\n      }\n\n      & g {\n        stroke: ${({ theme }) => theme.text}\n      }\n    }\n  }\n`\nexport default withTheme(globalStyle)\n","export interface ThemeProps {\n  background: string\n  text: string\n  button: string\n  vertexbg: string\n  select: string\n  option: string\n}\n\nexport const darkTheme: ThemeProps = {\n  background: 'var(--dark-background)',\n  text: 'var(--dark-text)',\n  button: 'var(--dark-button)',\n  vertexbg: 'var(--dark-vertexbg)',\n  select: 'var(--dark-select)',\n  option: 'var(--dark-option)',\n}\n\nexport const lightTheme: ThemeProps = {\n  background: 'var(--light-background)',\n  text: 'var(--light-text)',\n  button: 'var(--light-button)',\n  vertexbg: 'var(--light-vertexbg)',\n  select: 'var(--light-select)',\n  option: 'var(--light-option)',\n}\n","// https://dev.to/viniciusmdias/how-to-create-a-theme-in-react-typescript-with-styled-components-3fn\n\nimport { ThemeProvider } from 'styled-components'\nimport { lightTheme, darkTheme } from '../styles/themes'\n\ntype ThemeContextProps = {\n  theme: string\n  children: React.ReactNode\n}\n\nconst ThemeContext = ({ theme, children }: ThemeContextProps) => {\n  const themeMode = theme === 'dark' ? darkTheme : lightTheme\n\n  return <ThemeProvider theme={themeMode}>{children}</ThemeProvider>\n}\n\nexport default ThemeContext\n","import React, { useState } from 'react'\nimport { contextProps } from './types'\n\ntype posnMap = {\n  [vertex: string]: {\n    posnOrigin: [number, number]\n    posnNew: [number, number]\n    translate: { x: number; y: number }\n  }\n}\n\ntype posnCtx = [posnMap, React.Dispatch<React.SetStateAction<posnMap>> | (() => {})]\n// (posnMap | React.Dispatch<React.SetStateAction<posnMap>>)[]\n// [posnMap, React.Dispatch<React.SetStateAction<posnMap>>]\n\nexport const PositionContext = React.createContext<posnCtx>([{}, () => {}])\n\nexport const PositionContextProvider = (props: contextProps) => {\n  const [positionMap, setPositionMap] = useState<posnMap>({})\n\n  return <PositionContext.Provider value={[positionMap, setPositionMap]}>{props.children}</PositionContext.Provider>\n}\n","import Dag from './dagClass'\nimport { IdagData, Vertex } from './types'\n\nexport default class Graph extends Dag implements IdagData {\n  rank: {\n    [name: string]: number\n  }\n  topSorted: string[]\n\n  constructor() {\n    super()\n    this.rank = {}\n    this.topSorted = []\n  }\n\n  private topologySortCaller() {\n    let result: string[] = []\n    super.topsort((vertex, path) => {\n      result.push(vertex.name)\n    })\n    this.topSorted = result\n    return result\n  }\n\n  private visit_giveRank() {\n    let leafToRoot = [...this.topSorted].reverse()\n    let ranking = 0\n    leafToRoot.forEach((name, i) => {\n      let incomingNames = [...this.vertices[name].incomingNames]\n      let nextName = leafToRoot[i + 1]\n      // when nextName is same ranking\n      if (!incomingNames.includes(nextName)) {\n        this.rank[name] = ranking\n        return\n      }\n      // when nextName is higher ranking\n      if (incomingNames.includes(nextName)) {\n        this.rank[name] = ranking\n        ranking += 1\n        return\n      }\n    })\n  }\n\n  private deleteFromIncomingArr(deleteName: string, vertex: Vertex) {\n    vertex.incomingNames = vertex.incomingNames.filter((item) => item !== deleteName)\n  }\n\n  private deleteFromIncoming(deleteNameKey: string, vertex: Vertex) {\n    delete vertex.incoming[deleteNameKey]\n  }\n\n  private getOutgoingMap() {\n    let outGoingMap: { [name: string]: string[] } = {}\n    for (const [name, vertex] of Object.entries(this.vertices)) {\n      for (let from of vertex.incomingNames) {\n        if (outGoingMap[from] !== undefined) {\n          if (outGoingMap[from].includes(name)) {\n            continue\n          } else {\n            outGoingMap[from].push(name)\n          }\n        } else if (outGoingMap[from] === undefined) {\n          outGoingMap[from] = [name]\n        }\n      }\n    }\n    return outGoingMap\n  }\n\n  giveRank() {\n    if (this.topSorted.length !== this.names.length) this.topologySortCaller()\n    this.rank = {} // if not reset to empty, second time calling visit_giveRank wouod cause unexpected result\n    this.visit_giveRank()\n  }\n\n  delete(deleteName: string) {\n    // Delete edge: whoever's has only outgoing and it is deleName\n    let outGoingMap = this.getOutgoingMap()\n    for (const [vertexName, outgoingList] of Object.entries(outGoingMap)) {\n      if (outgoingList.includes(deleteName) && outgoingList.length === 1) {\n        this.vertices[vertexName].hasOutgoing = false\n      }\n    }\n\n    // Delete edge: whoever's 檢查 del 的下家 刪除掉     del 這個 incomming\n    for (const [vertexName, vertex] of Object.entries(this.vertices)) {\n      this.deleteFromIncomingArr(deleteName, vertex)\n      this.deleteFromIncoming(deleteName, vertex)\n    }\n\n    // Delete Vertex\n    delete this.vertices[deleteName]\n\n    // Delte from names\n    this.names = this.names.filter((name) => {\n      return name !== deleteName\n    })\n\n    // update topSorted and rank\n    this.giveRank()\n  }\n\n  changeName() {\n    //TODO\n  }\n}\n","import { vertexValue, Vertex, Vertices } from './types'\n\nexport default class Dag {\n  names: string[]\n  vertices: Vertices\n\n  constructor() {\n    this.names = []\n    this.vertices = {}\n  }\n\n  add(name: string) {\n    //if(!name) return\n    if (this.vertices.hasOwnProperty(name)) return this.vertices[name]\n\n    let vertex: Vertex = {\n      name: name,\n      incoming: {},\n      incomingNames: [],\n      hasOutgoing: false,\n      value: null,\n    }\n\n    this.vertices[name] = vertex\n    this.names.push(name)\n    return vertex\n  }\n\n  map(name: string, value: vertexValue) {\n    this.add(name).value = value\n  }\n\n  visit(\n    vertex: Vertex,\n    fn: (vertex: Vertex, path: string[]) => void,\n    visited?: { [name: string]: boolean },\n    path?: string[],\n  ) {\n    let [name, vertices, names] = [vertex.name, vertex.incoming, vertex.incomingNames]\n\n    if (!visited) visited = {}\n    if (!path) path = []\n\n    if (visited.hasOwnProperty(name)) return\n\n    path.push(name)\n    visited[name] = true\n\n    for (let incomingName of names) {\n      this.visit(vertices[incomingName], fn, visited, path)\n    }\n    fn(vertex, path)\n    path.pop()\n  }\n\n  addEdge(fromName: string, toName: string) {\n    if (!fromName || !toName || fromName === toName) return\n    let from = this.add(fromName)\n    let to = this.add(toName)\n    if (to.incoming.hasOwnProperty(fromName)) return\n\n    const checkCycle = (vertex: Vertex, path: string[]) => {\n      if (vertex.name === toName) {\n        throw new Error('cycle detected: ' + toName + ' <- ' + path.join(' <- '))\n      }\n    }\n\n    this.visit(from, checkCycle)\n    from.hasOutgoing = true\n    to.incoming[fromName] = from\n    to.incomingNames.push(fromName)\n  }\n\n  addEdges(name: string, value: vertexValue, before?: string | string[], after?: string | string[]) {\n    this.map(name, value)\n    if (before) {\n      if (typeof before === 'string') {\n        this.addEdge(name, before)\n      }\n      if (Array.isArray(before)) {\n        before.forEach((beforeName) => {\n          this.addEdge(name, beforeName)\n        })\n      }\n    }\n    if (after) {\n      if (typeof after === 'string') {\n        this.addEdge(after, name)\n      }\n      if (Array.isArray(after)) {\n        after.forEach((afterName) => {\n          this.addEdge(afterName, name)\n        })\n      }\n    }\n  }\n\n  topsort(fn: (vertex: Vertex, path: string[]) => void) {\n    let visited = {}\n    let [vertices, names] = [this.vertices, this.names]\n\n    for (let name of names) {\n      let vertex = vertices[name]\n      if (!vertex.hasOutgoing) {\n        this.visit(vertex, fn, visited)\n      }\n    }\n  }\n}\n","import { input, dagEdagesInput } from '../../ts/types/app_types'\n\n// enum Delimter {\n//   Comma = \",\",\n//   Space = \" \",\n//   Period = \".\",\n//   Semicolon = \";\",\n//   Comma2 = \"，\",\n//   Space2 = \"　\",\n//   Period2 = \"。\",\n// }\n\nexport default function inputParser(verticesInput: input) {\n  let { incomming, vertex, outgoing } = verticesInput\n  let [incommingArr, outgoingArr] = [seperate(incomming.trim()), seperate(outgoing.trim())]\n\n  let result: dagEdagesInput = {\n    incomming: arrTrim(incommingArr),\n    vertex: vertex.trim(),\n    outgoing: arrTrim(outgoingArr),\n  }\n\n  return result\n}\n\nfunction seperate(str: string) {\n  return str.split(/[\\s,]+/)\n}\n\nfunction arrTrim(arr: string[]) {\n  let result: string[] = []\n  arr.forEach((each, i) => {\n    result[i] = each.trim()\n  })\n  return result\n}\n","import React, { useState, useEffect } from 'react'\nimport Graph from '../../dag/graphClass'\nimport { input } from '../../ts/types/app_types'\nimport inputParser from '../utils/inputParser'\n\ntype setDag = {\n  createVertex: (input: input) => boolean\n  deleteVertex: (name: string) => void\n  appendVertexValue: (name: string, value: string) => void\n  resetDag: () => void\n}\ntype dagCtx = [Graph, setDag, boolean, React.Dispatch<React.SetStateAction<boolean>> | (() => {})]\n\ntype dagMapLocalStorage = {\n  [name: string]: {\n    rank: number\n    value: string | null\n    incomingNames: string[]\n  }\n}\n\nexport const DagContext = React.createContext<dagCtx>([{} as Graph, {} as setDag, false, () => {}])\n\ntype DagContextProviderProps = {\n  setlocalStorage: (dagData: string) => void\n  children: React.ReactNode\n}\n\n/**\n *  Encapsulate CRUD on DAG in Context API because\n *   1. Methods of CRUD on DAG is within this DAG object, instead of React. React needs to know if any updates on this obj.\n *   2. CRUD on DAG is coupling w/ window.localStorage, which is not known by React either.\n */\nexport const DagContextProvider = ({ setlocalStorage, children }: DagContextProviderProps) => {\n  /**\n   *  Since we use dag class's method to update vertex vlaue,\n   *  React would not know the update of dag unless having a update state\n   *  to inform react to rerender CreateVertex.tsx where we import dag data\n   */\n  const [update, setUpdate] = useState(false)\n  const [dag, _setDag] = useState<Graph>(new Graph())\n  const setDag = {\n    createVertex,\n    deleteVertex,\n    appendVertexValue,\n    resetDag,\n  }\n\n  const updateDagLocalStorage = (dag: Graph) => {\n    const map: dagMapLocalStorage = {}\n    dag.names.forEach((name) => {\n      map[name] = {\n        rank: dag.rank[name],\n        value: dag.vertices[name].value ?? null,\n        incomingNames: dag.vertices[name].incomingNames,\n      }\n    })\n    const mapStr = JSON.stringify(map)\n    setlocalStorage(mapStr)\n  }\n\n  const repaintPrevDag = () => {\n    const prevDagData = window.localStorage.getItem('dagData')\n    if (prevDagData === null || prevDagData === 'null' || prevDagData === '') return\n    const map: dagMapLocalStorage = JSON.parse(prevDagData)\n    for (let [name, value] of Object.entries(map)) {\n      dag.map(name, map[name].value)\n      value.incomingNames.forEach((incomingName) => {\n        dag.addEdge(incomingName, name)\n      })\n    }\n    dag.giveRank()\n    setUpdate(!update)\n  }\n\n  function createVertex(input: input) {\n    if (!input.vertex) {\n      alert(`Vertex Name must not be empty`)\n      return false\n    }\n    let { incomming, vertex, outgoing } = inputParser(input)\n    const value = dag.vertices[vertex] ? dag.vertices[vertex].value : null\n    try {\n      dag.addEdges(vertex, value, outgoing, incomming)\n      dag.giveRank()\n    } catch (err) {\n      alert(err)\n      return false\n    }\n    setUpdate(!update)\n    updateDagLocalStorage(dag)\n    return true\n  }\n\n  function deleteVertex(name: string) {\n    if (!dag.names.includes(name)) {\n      alert(`Tag >>> ${name} <<< not exist !`)\n      return\n    }\n    dag.delete(name)\n    setUpdate(!update)\n    updateDagLocalStorage(dag)\n  }\n\n  function appendVertexValue(name: string, value: string) {\n    dag.map(name, value)\n    setUpdate(!update)\n    updateDagLocalStorage(dag)\n  }\n\n  function resetDag() {\n    setlocalStorage('')\n    setUpdate(!update)\n    /**\n     *  to inform DrawGraph.tsx dag is changed and update UI\n     */\n    _setDag(() => new Graph())\n  }\n\n  useEffect(() => {\n    repaintPrevDag()\n  }, [])\n\n  return <DagContext.Provider value={[dag, setDag, update, setUpdate]}>{children}</DagContext.Provider>\n}\n","import { IdagData } from '../../dag/types'\n\ntype arrowsRecord = {\n  [key: number]: {\n    name: string\n    incommingName: string\n  }\n}\n\nexport default function arrowsInfoGetter(dag: IdagData): [arrowsRecord, number] {\n  if (!dag.topSorted) throw new Error('dag has no topSorted yet, dag.topSorted might be undefined ')\n  let topSorted = [...dag.topSorted]\n  let counter = 0\n  let map: arrowsRecord = {}\n\n  topSorted.reverse().forEach((name, i) => {\n    let incommingNames = dag['vertices'][name]['incomingNames']\n    incommingNames.forEach((incommingName, j) => {\n      map[counter] = {\n        name: name,\n        incommingName: incommingName,\n      }\n      counter += 1\n    })\n  })\n\n  return [map, counter]\n}\n","// mountPath(divs, arrowRef, [opt])  opt is for dynamic draw connector\n\nexport class SvgPath {\n  private ele: SVGPathElement\n  command: string | null\n\n  constructor(ele: SVGPathElement) {\n    this.ele = ele\n    this.command = this.ele.getAttribute('d')\n  }\n\n  mount(pathPara: string) {\n    this.ele.setAttribute('d', pathPara)\n  }\n}\n\nexport class SvgPathEnds {\n  private from: HTMLDivElement\n  private to: HTMLDivElement\n\n  constructor(divs: { from: HTMLDivElement; to: HTMLDivElement }) {\n    this.from = divs.from\n    this.to = divs.to\n  }\n\n  private getPosnLeftEnds() {\n    let endFrom = {\n      x: this.from.offsetLeft - 8,\n      y: this.from.offsetTop + this.from.offsetHeight / 2 + 10,\n    }\n    let endTo = {\n      x: this.to.offsetLeft - 8,\n      y: this.to.offsetTop + this.to.offsetHeight / 2 - 10,\n    }\n    endFrom.x += getTrans(this.from).number.x\n    endFrom.y += getTrans(this.from).number.y\n    endTo.x += getTrans(this.to).number.x\n    endTo.y += getTrans(this.to).number.y\n\n    return [endFrom, endTo]\n  }\n\n  private getPosnTopButtonEnds() {\n    let endFrom = {\n      x: this.from.offsetLeft + this.from.offsetWidth / 2,\n      y: this.from.offsetTop + this.from.offsetHeight + 8,\n    }\n    let endTo = {\n      x: this.from.offsetLeft + this.from.offsetWidth / 2,\n      y: this.from.offsetTop - 8,\n    }\n    endFrom.x += getTrans(this.from).number.x\n    endFrom.y += getTrans(this.from).number.y\n    endTo.x += getTrans(this.to).number.x\n    endTo.y += getTrans(this.to).number.y\n\n    return [endFrom, endTo]\n  }\n\n  getStraitCommand() {\n    const [endFrom, endTo] = this.getPosnTopButtonEnds()\n    // M142,200 L142,330\n    let straightPara = {\n      moveFrom: endFrom,\n      LineTo: endTo,\n    }\n    let dStr = getStraightCommand(straightPara)\n    return dStr\n  }\n\n  getCurveCommand() {\n    const [endFrom, endTo] = this.getPosnLeftEnds()\n    const delta = 100\n    let curvePara = {\n      moveFrom: endFrom,\n      controlPoint1: { x: endFrom.x - delta, y: endFrom.y },\n      controlPoint2: { x: endTo.x - delta, y: endTo.y },\n      moveTo: endTo,\n    }\n    let dStr = getCurvePathCommand(curvePara)\n    return dStr\n  }\n}\n\nexport function getNewCurvesPathCommnadAfterDrag(\n  prevCommand: string,\n  indicator: 'FROM' | 'TO',\n  translate: { x: number; y: number },\n) {\n  // prevCommand = \"M142,180 C42,180 192,310 292,310\"\n  let prevPara = prevCommand.split(/[\\s|,]/g) // ['M142', '180', 'C42', '180', '192', '310', '292', '310']\n  prevPara[0] = prevPara[0].replace('M', '')\n  prevPara[2] = prevPara[2].replace('C', '') // prevPara = ['142', '180', '42', '180', '192', '310', '292', '310']\n\n  const curvePara = {\n    moveFrom: { x: +prevPara[0], y: +prevPara[1] },\n    controlPoint1: { x: +prevPara[2], y: +prevPara[3] },\n    controlPoint2: { x: +prevPara[4], y: +prevPara[5] },\n    moveTo: { x: +prevPara[6], y: +prevPara[7] },\n  }\n\n  if (indicator === 'FROM') {\n    curvePara.moveFrom.x += translate.x\n    curvePara.moveFrom.y += translate.y\n    curvePara.controlPoint1.x += translate.x\n    curvePara.controlPoint1.y += translate.y\n  } else if (indicator === 'TO') {\n    curvePara.controlPoint2.x += translate.x\n    curvePara.controlPoint2.y += translate.y\n    curvePara.moveTo.x += translate.x\n    curvePara.moveTo.y += translate.y\n  } else throw new Error('Wrong indicaotr format')\n  const newCurvePara = getCurvePathCommand(curvePara)\n  return newCurvePara\n}\n\nexport function getNewStraightPathCommandAfterDrag(\n  prevCommand: string,\n  indicator: 'FROM' | 'TO',\n  translate: { x: number; y: number },\n) {\n  // prevCommand = \"M200,239L471,305\"\n  let prevPara = prevCommand.split(/[\\s|,]/g) // ['M200', '239', 'L471', '305']\n  prevPara[0] = prevPara[0].replace('M', '')\n  prevPara[2] = prevPara[2].replace('L', '') // // ['200', '239', '471', '305']\n\n  const straightPara = {\n    moveFrom: { x: +prevPara[0], y: +prevPara[1] },\n    LineTo: { x: +prevPara[2], y: +prevPara[3] },\n  }\n\n  if (indicator === 'FROM') {\n    straightPara.moveFrom.x += translate.x\n    straightPara.moveFrom.y += translate.y\n  } else if (indicator === 'TO') {\n    straightPara.LineTo.x += translate.x\n    straightPara.LineTo.y += translate.y\n  } else throw new Error('Wrong indicator format')\n  const newStraightPara = getStraightCommand(straightPara)\n  return newStraightPara\n}\n\nfunction getCurvePathCommand(CurvesPara: {\n  moveFrom: { x: number; y: number }\n  controlPoint1: { x: number; y: number }\n  controlPoint2: { x: number; y: number }\n  moveTo: { x: number; y: number }\n}) {\n  const { moveFrom, controlPoint1, controlPoint2, moveTo } = CurvesPara\n  const dStr =\n    `M${moveFrom.x},${moveFrom.y} ` +\n    `C${controlPoint1.x},${controlPoint1.y} ` +\n    `${controlPoint2.x},${controlPoint2.y} ` +\n    `${moveTo.x},${moveTo.y}`\n  return dStr\n}\n\nfunction getStraightCommand(StraightPara: { moveFrom: { x: number; y: number }; LineTo: { x: number; y: number } }) {\n  const { moveFrom, LineTo } = StraightPara\n  const dStr = `M${moveFrom.x},${moveFrom.y} ` + `L${LineTo.x},${LineTo.y}`\n  return dStr\n}\n\nfunction getTrans(transform: HTMLDivElement) {\n  let trans = transform.style.transform // transform: 'translate(0%, 0%) translate(150px, 150px)'\n  const arr = trans.split(' ')\n  const transArr = arr.map((each) => {\n    return +each.replace(/[^\\d]/g, '') // ['0', '0', '150', '150'] into number[]\n  })\n  const result = {\n    percentage: { x: transArr[0], y: transArr[1] },\n    number: { x: transArr[2], y: transArr[3] },\n  }\n  return result\n}\n\n// let drawConnector = function(divFrom, divTo, arrowLeft) {\n//   let fromPosnLeft = {\n//     x: divFrom.offsetLeft - 8,\n//     y: divFrom.offsetTop  + divFrom.offsetHeight / 2 + 10\n//   };\n//   let toPosnLeft = {\n//     x: divTo.offsetLeft - 8,\n//     y: divTo.offsetTop  + divTo.offsetHeight / 2 - 10\n//   };\n//   let dStrLeft =\n//       \"M\" +\n//       (fromPosnLeft.x      ) + \",\" + (fromPosnLeft.y) + \" \" +\n//       \"C\" +\n//       (fromPosnLeft.x - 100) + \",\" + (fromPosnLeft.y) + \" \" +\n//       (toPosnLeft.x - 100) + \",\" + (toPosnLeft.y) + \" \" +\n//       (toPosnLeft.x      ) + \",\" + (toPosnLeft.y);\n//   arrowLeft.setAttribute(\"d\", dStrLeft);\n// };\n","import { arrowStyle, RefsArrows } from '../../ts/types/app_types'\nimport {\n  SvgPath,\n  SvgPathEnds,\n  getNewCurvesPathCommnadAfterDrag,\n  getNewStraightPathCommandAfterDrag,\n} from '../utils/svgPathHandler'\n\nexport function useDrawConnectorInitial(styleOpt: arrowStyle) {\n  function drawConnectorInitial(\n    divs: { from: HTMLDivElement; to: HTMLDivElement },\n    arrowRef: SVGPathElement,\n    translateMap = {\n      divFrom: { x: 0, y: 0 },\n      divTo: { x: 0, y: 0 },\n    }, // TODO: btn switch btw defualt position <-> dragged positin\n  ) {\n    const path = new SvgPath(arrowRef)\n    const ends = new SvgPathEnds(divs)\n    let pathCommand = ''\n    if (styleOpt === 'CURVE') pathCommand = ends.getCurveCommand()\n    if (styleOpt === 'STRAIGHT') pathCommand = ends.getStraitCommand()\n    path.mount(pathCommand)\n  }\n\n  return { drawConnectorInitial }\n}\n\nexport function useDrawConnectorDynamic(styleOpt: arrowStyle) {\n  let defaultPathMemoizer: { [pathId: string]: string } = {}\n\n  function drawConnectorDynamic(arrowsRef: RefsArrows, vertexName: string, translate: { x: number; y: number }) {\n    //TODO\n    arrowsRef.forEach((arrowRef, i) => {\n      const pathRef = arrowRef.current\n      let indicator: 'FROM' | 'TO'\n      if (pathRef?.getAttribute('data-vertex_from') === vertexName) {\n        indicator = 'FROM'\n      } else if (pathRef?.getAttribute('data-vertex_to') === vertexName) {\n        indicator = 'TO'\n      } else throw new Error('SVGPathElemet missing attrivute data-vertex_from and data-vertex_to')\n\n      const path = new SvgPath(pathRef)\n\n      if (!path.command) throw new Error('path.command not found')\n      if (!defaultPathMemoizer[pathRef.id]) {\n        defaultPathMemoizer[pathRef.id] = path.command\n      }\n      if (defaultPathMemoizer[pathRef.id]) {\n        let newPathCommand = ''\n        if (styleOpt === 'CURVE') {\n          newPathCommand = getNewCurvesPathCommnadAfterDrag(defaultPathMemoizer[pathRef.id], indicator, translate)\n        } else if (styleOpt === 'STRAIGHT') {\n          newPathCommand = getNewStraightPathCommandAfterDrag(defaultPathMemoizer[pathRef.id], indicator, translate)\n        }\n        path.mount(newPathCommand)\n      }\n    })\n  }\n\n  return { drawConnectorDynamic }\n}\n","import React, { useEffect, useContext } from 'react'\nimport { arrowStyle } from '../../ts/types/app_types'\nimport { PositionContext } from '../contexts/PositionContext'\nimport { useDrawConnectorInitial } from '../hooks/useDrawSVGConnector'\n\nexport default function Arrow(props: {\n  incommingName: string\n  name: string\n  arrowStyleOpt: arrowStyle\n  forwardedRef: React.MutableRefObject<SVGPathElement>\n  forwardedDivsRef: React.RefObject<HTMLDivElement>[]\n}) {\n  const { incommingName, name, arrowStyleOpt, forwardedRef, forwardedDivsRef } = props\n\n  let [positionMap] = useContext(PositionContext)\n  let { drawConnectorInitial } = useDrawConnectorInitial(arrowStyleOpt)\n\n  function relatedDivsChecker() {\n    const relatedDivs: { from: HTMLDivElement | null; to: HTMLDivElement | null } = { from: null, to: null }\n    for (let ref of forwardedDivsRef) {\n      const div = ref.current\n      if (div?.id === incommingName) relatedDivs.from = div\n      if (div?.id === name) relatedDivs.to = div\n    }\n    // if (typeof relatedDivs.from === null && typeof relatedDivs.to === null) {\n    //   throw new Error (\"find no related vertex divs in Arrow.tsx\")\n    // } else {\n    //   return relatedDivs\n    // }\n\n    /// TODO\n    /// 也許要抽出到 utils 寫個 JEST，不然之後只會 改Ａ壞Ｂ 然後找半天\n    if (relatedDivs.from === null && relatedDivs.to === null) throw new Error('Cant access divs refs in Arrow.tsx')\n    return relatedDivs as { from: HTMLDivElement; to: HTMLDivElement }\n  }\n\n  useEffect(() => {\n    /** Mount path command on SVGElement */\n    let relatedDivs = relatedDivsChecker()\n    drawConnectorInitial(relatedDivs, forwardedRef.current)\n  }, [forwardedDivsRef])\n\n  return (\n    <g fill=\"none\" stroke=\"black\" strokeWidth=\"2\" markerEnd=\"url(#arrowhead)\">\n      <path\n        ref={forwardedRef}\n        id={`arrowLeft_${name}_${incommingName}`}\n        data-vertex_from={incommingName}\n        data-vertex_to={name}\n      />\n    </g>\n  )\n}\n","import arrowsInfoGetter from './utils/arrowsInfoGetter'\nimport { IdagData } from '../dag/types'\nimport Arrow from './Arrow/Arrow'\nimport { arrowStyle } from '../ts/types/app_types'\n\nexport default function arrowRenderer(props: {\n  dag: IdagData\n  refs: [React.MutableRefObject<any>, React.MutableRefObject<any>]\n  arrowStyleOpt: arrowStyle\n}) {\n  const { dag, refs, arrowStyleOpt } = props\n  const [divsRefs, arrowsRefs] = refs\n  const [arrowsRecord, arrowsNumber] = arrowsInfoGetter(dag)\n\n  return [...Array(arrowsNumber)].map((e, i) => (\n    <Arrow\n      incommingName={arrowsRecord[i].incommingName}\n      name={arrowsRecord[i].name}\n      arrowStyleOpt={arrowStyleOpt}\n      key={i}\n      forwardedRef={arrowsRefs.current[i]}\n      forwardedDivsRef={divsRefs.current}\n    />\n  ))\n}\n","import styled from 'styled-components'\n\ninterface IPosn {\n  posn: {\n    position: string\n    top?: string\n    left?: string\n  }\n}\n\nexport const Container = styled.div<IPosn>`\n  color: ${({ theme }) => theme.text};\n  background-color: ${({ theme }) => theme.vertexbg};\n  text-align: center;\n  padding: 10px;\n  min-width: 100px;\n  height: auto;\n  border-radius: 15px;\n\n  position: absolute;\n  top: ${({ posn }) => posn.top};\n  left: ${({ posn }) => posn.left};\n\n  &:hover {\n    cursor: grab;\n  }\n\n  &.draggable-dragging {\n    cursor: grabbing;\n  }\n\n  /*\n      To Prevent user selectin inside the drag source \n      This is also covered in draggable component (duplicated)\n  */\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n\n  /*\n      vertex's name as key \n  */\n  span {\n    background-color: rgba(14, 151, 179, 0.13);\n    padding: 0 5% 0 5%;\n    position: absolute;\n    top: 3%;\n    left: 4px;\n    border: 1px solid rgba(16, 18, 27, 0.35);\n    border-radius: 15px;\n  }\n\n  /*\n      vertex's value could changed by submitting form\n  */\n  form input {\n    color: ${({ theme }) => theme.text};\n    background-color: ${({ theme }) => theme.vertexbg};\n    border: 0;\n    border-radius: 15px;\n    outline: 0;\n    cursor: inherit;\n    max-width: 80px;\n    font-size: 1.08rem;\n    text-align: center;\n\n    &:focus {\n      background-color: rgb(156 163 175);\n    }\n  }\n`\n","export type ControlPosition = { x: number; y: number }\nexport type PositionOffsetControlPosition = { x: number | string; y: number | string }\n\nexport function createCSSTransform(contorlPos: ControlPosition, positionOffset: PositionOffsetControlPosition) {\n  const translation = getTranslation(contorlPos, positionOffset, 'px')\n  return { transform: translation }\n}\n\nexport function getTranslation(\n  { x, y }: ControlPosition,\n  positionOffset: PositionOffsetControlPosition,\n  unitSuffix: string,\n) {\n  let translation = `translate(${x}${unitSuffix},${y}${unitSuffix})`\n  if (positionOffset) {\n    const defaultX = `${typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix}`\n    const defaultY = `${typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix}`\n    translation = `translate(${defaultX}, ${defaultY}) ` + translation\n  }\n  return translation\n}\n\nexport function offsetXYFromParent(evt: MouseEvent, offsetParent: Element): ControlPosition {\n  const isBody = offsetParent === offsetParent.ownerDocument.body\n  const offsetParentRect = isBody ? { left: 0, top: 0 } : offsetParent.getBoundingClientRect()\n\n  const x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left\n  const y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top\n\n  return { x, y }\n}\n\nexport function addEvent(ele: Node, event: string, handler: (event: any) => void, inputOptions?: Object) {\n  const options = { capture: true, ...inputOptions }\n\n  ele.addEventListener(event, handler, options)\n}\n\nexport function removeEvent(ele: Node, event: string, handler: (event: any) => void, inputOptions?: Object) {\n  const options = { capture: true, ...inputOptions }\n\n  ele.removeEventListener(event, handler, options)\n}\n\n// Handle forwarded ref, access controlled ref in useEffect or ref would be default (null)\n// In DraggableCore.tsx\nexport function withControlledNodeRef(node: HTMLDivElement, handler: (event: any, node: HTMLDivElement) => void) {\n  return function eventHandler(event: any) {\n    handler(event, node)\n  }\n}\n\n// User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\n\n// Note we're passing `document` b/c we could be iframed\n// Unalbe select while dragging\nexport function addUserSelectStyles(doc?: Document) {\n  if (!doc) return\n  let styleEl = doc.getElementById('draggable-style-el') as HTMLStyleElement\n  if (!styleEl) {\n    styleEl = doc.createElement('style')\n    styleEl.type = 'text/css'\n    styleEl.id = 'draggable-style-el'\n    styleEl.innerHTML = '.draggable-transparent-selection *::-moz-selection {all: inherit;}\\n'\n    styleEl.innerHTML += '.draggable-transparent-selection *::selection {all: inherit;}\\n'\n    doc.getElementsByTagName('head')[0].appendChild(styleEl)\n  }\n  if (doc.body) addClassName(doc.body, 'draggable-transparent-selection')\n}\n\nexport function removeUserSelectStyles(doc?: Document) {\n  if (!doc) return\n  try {\n    if (doc.body) removeClassName(doc.body, 'draggable-transparent-selection')\n    // Remove selection caused by scroll, unless it's a focused input\n    // (we use doc.defaultView in case we're in an iframe)\n    const selection = (doc.defaultView || window).getSelection()\n    if (selection && selection.type !== 'Caret') {\n      selection.removeAllRanges()\n    }\n  } catch (e) {\n    // probably IE\n  }\n}\n\nexport function addClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.add(className)\n  } else {\n    if (!el.className.match(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`))) {\n      el.className += ` ${className}`\n    }\n  }\n}\n\nexport function removeClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.remove(className)\n  } else {\n    el.className = el.className.replace(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`, 'g'), '')\n  }\n}\n","import { DraggableData } from './types'\nimport { offsetXYFromParent } from './domFns'\n\nexport function canDragX(axis: string) {\n  return axis === 'both' || axis === 'x'\n}\n\nexport function canDragY(axis: string) {\n  return axis === 'both' || axis === 'y'\n}\n\nexport function getControlPosition(e: MouseEvent, node: HTMLElement) {\n  const offsetParent = node.offsetParent || node.ownerDocument.body\n  return offsetXYFromParent(e, offsetParent)\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nexport function createCoreData(state: { lastX: number; lastY: number }, x: number, y: number, node: HTMLElement) {\n  const { lastX, lastY } = state\n  const isStart = !isNum(lastX)\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x,\n      y,\n    }\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node,\n      deltaX: x - lastX,\n      deltaY: y - lastY,\n      lastX: lastX,\n      lastY: lastY,\n      x,\n      y,\n    }\n  }\n}\n\n// Create an data object exposed by <Draggable>'s events\nexport function createDraggableData(\n  draggableState: { dragging: boolean; dragged: boolean; x: number; y: number },\n  scale: number,\n  coreData: DraggableData,\n): DraggableData {\n  return {\n    node: coreData.node,\n    x: draggableState.x + coreData.deltaX / scale,\n    y: draggableState.y + coreData.deltaY / scale,\n    deltaX: coreData.deltaX / scale,\n    deltaY: coreData.deltaY / scale,\n    lastX: draggableState.x,\n    lastY: draggableState.y,\n  }\n}\n\nfunction isNum(num: any): boolean {\n  return typeof num === 'number'\n}\n","import React, { useState, useEffect } from 'react'\nimport { addEvent, addUserSelectStyles, removeEvent, removeUserSelectStyles, withControlledNodeRef } from './domFns'\nimport log from './log'\nimport { getControlPosition, createCoreData } from './positionFns'\nimport { AllPropsRequired, DraggableCoreProps } from './types'\n\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend',\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup',\n  },\n}\n\nlet dragEventFor = eventsFor.mouse\n\nexport default function DraggableCore(props: DraggableCoreProps) {\n  //Default Props\n  const args: AllPropsRequired<DraggableCoreProps> = {\n    ...props,\n    allowAnyClick: props.allowAnyClick ?? false,\n    disabled: props.disabled ?? false,\n    enableUserSelectHack: props.enableUserSelectHack ?? true,\n    onStart: props.onStart ?? (() => {}),\n    onDrag: props.onDrag ?? (() => {}),\n    onStop: props.onStop ?? (() => {}),\n    onMouseDown: props.onMouseDown ?? (() => {}),\n    scale: props.scale ?? 1,\n  }\n\n  const [state, setState] = useState({\n    dragging: false,\n    lastX: NaN,\n    lastY: NaN,\n  })\n\n  function handleDragStart(e: MouseEvent, thisNode: HTMLDivElement) {\n    const ownerDocument = thisNode.ownerDocument\n    const position = getControlPosition(e, thisNode)\n    const { x, y } = position\n    const coreEvent = createCoreData(state, x, y, thisNode)\n\n    log('DraggableCore: handleDragStart: %j', coreEvent)\n\n    // Call event handler. If it returns explicit false, cancel.\n    log('calling', args.onStart)\n    const shouldStart = args.onStart(e, coreEvent)\n    if (shouldStart === false) return\n\n    // Add a style to the body to disable user-select. This prevents text from\n    // being selected all over the page.\n    if (args.enableUserSelectHack) addUserSelectStyles(ownerDocument)\n\n    setState({\n      dragging: true,\n      lastX: x,\n      lastY: y,\n    })\n  }\n\n  function handleDrag(e: MouseEvent) {\n    // Get the current drag point from the event. This is used as the offset.\n    const thisNode = args.forwardedRef.current\n    if (!thisNode) throw new Error('forwarded reference of vertex is null')\n    const position = getControlPosition(e, thisNode)\n    let { x, y } = position\n    // Create an event object w/ all the data parents need to make a decision here.\n    const coreEvent = createCoreData(state, x, y, thisNode)\n\n    log('DraggableCore: handleDrag: %j', coreEvent)\n\n    // Call event handler. If it returns explicit falase, cancel. -> see example \"I don't want to be drag\"\n    const shouldUpdate = args.onDrag(e, coreEvent)\n    if (shouldUpdate === false) {\n      try {\n        handleDragStop(new MouseEvent('mouseup'))\n      } catch (err) {\n        // Old browers\n        const event = document.createEvent('MouseEvents')\n        event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n        handleDragStop(event)\n      }\n      return\n    }\n\n    setState((prev) => ({\n      ...prev,\n      lastX: x,\n      lastY: y,\n    }))\n  }\n\n  function handleDragStop(e: MouseEvent) {\n    if (!state.dragging) return // return when re-render after setState in this function.\n\n    const thisNode = args.forwardedRef.current\n    if (!thisNode) throw new Error('forwarded reference of vertex is null')\n    const ownerDocument = thisNode.ownerDocument\n    const position = getControlPosition(e, thisNode)\n    const { x, y } = position\n    const coreEvent = createCoreData(state, x, y, thisNode)\n\n    // Call event handler\n    const shouldContinue = args.onStop(e, coreEvent)\n    if (shouldContinue === false) return false\n\n    // Remove user-select hack\n    if (args.enableUserSelectHack) {\n      removeUserSelectStyles(ownerDocument)\n    }\n\n    log('DraggableCore: handleDragStop: %j', coreEvent)\n\n    setState({\n      dragging: false,\n      lastX: NaN,\n      lastY: NaN,\n    })\n  }\n\n  //TODO: onTouchStart() , onTAouchEnd(), change eventsFor\n  function onMouseDown(e: MouseEvent) {\n    dragEventFor = eventsFor.mouse\n    //return handleDragStart(e);\n  }\n  function onMouseUp(e: MouseEvent) {\n    dragEventFor = eventsFor.mouse\n    //return handleDragStop(e);\n  }\n\n  useEffect(() => {\n    const thisNode = args.forwardedRef.current\n    if (!thisNode) throw new Error('forwarded reference of vertex is null')\n    const ownerDocument = thisNode.ownerDocument\n\n    addEvent(thisNode, dragEventFor.start, withControlledNodeRef(thisNode, handleDragStart), { passive: false })\n    if (state.dragging) {\n      // thisNode is controlled when dragging, thus no need withControlledNodeRef to wrap the handler.\n      addEvent(ownerDocument, dragEventFor.move, handleDrag)\n      addEvent(ownerDocument, dragEventFor.stop, handleDragStop)\n    }\n\n    return () => {\n      removeEvent(thisNode, dragEventFor.start, withControlledNodeRef(thisNode, handleDragStart), { passive: false })\n      removeEvent(ownerDocument, dragEventFor.move, handleDrag)\n      removeEvent(ownerDocument, dragEventFor.stop, handleDragStop)\n      if (args.enableUserSelectHack) removeUserSelectStyles(ownerDocument)\n    }\n  }, [state.dragging])\n\n  return (\n    <>\n      {/* {React.cloneElement(React.Children.only(args.children), {\n        onMouseDown: onMouseDown,\n        onMouseUp: onMouseUp,\n      })} */}\n      {args.children}\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { createCSSTransform } from './domFns'\nimport { canDragX, canDragY, createDraggableData } from './positionFns'\nimport { AllPropsRequired, DraggableData, DraggableProps } from './types'\nimport DraggableCore from './DraggableCore'\n\nexport default function Draggable(props: DraggableProps) {\n  // Default Props\n  const args: AllPropsRequired<DraggableProps> = {\n    ...props,\n    // from DraggableCore\n    allowAnyClick: props.allowAnyClick ?? false,\n    disabled: props.disabled ?? false,\n    enableUserSelectHack: props.enableUserSelectHack ?? true,\n    onStart: props.onStart ?? (() => {}),\n    onDrag: props.onDrag ?? (() => {}),\n    onStop: props.onStop ?? (() => {}),\n    onMouseDown: props.onMouseDown ?? (() => {}),\n    scale: props.scale ?? 1,\n    // from draggable itself\n    defaultClassName: props.defaultClassName !== undefined ? props.defaultClassName : 'draggable',\n    defaultClassNameDragging: props.defaultClassNameDragging ?? 'draggable-dragging',\n    defaultClassNameDragged: props.defaultClassNameDragged ?? 'draggable-dragged',\n    defaultPosition: props.defaultPosition !== undefined ? props.defaultPosition : { x: 0, y: 0 },\n    positionOffset: props.positionOffset !== undefined ? props.positionOffset : { x: '0%', y: '0%' },\n    position: props.position !== undefined ? props.position : { x: 0, y: 0 },\n    axis: props.axis !== undefined ? props.axis : 'both',\n  }\n\n  const [state, setState] = useState({\n    dragging: false,\n    dragged: false,\n    // Current transform x and y\n    x: props.defaultPosition?.x || props.position?.x || args.position.x,\n    y: props.defaultPosition?.y || props.position?.y || args.position.y,\n    //prevPropsPosition: {...position},\n  })\n\n  // TODO: onDrag to change state and thus style would change\n  // this will insert and change prop.onDrag  and pass to DraggableCore\n  function onDragStart(e: MouseEvent, coreData: DraggableData) {\n    // Shourt-circuit if user's callback killed it.\n    const shouldStart = args.onStart(e, createDraggableData(state, args.scale, coreData))\n    // Kills start event on core as well, so move handlers are never bound\n    if (shouldStart === false) return false\n\n    setState((prev) => ({\n      ...prev,\n      dragging: true,\n      dragged: true,\n    }))\n  }\n\n  function onDrag(e: MouseEvent, coreData: DraggableData) {\n    if (!state.dragging) return false\n    const uiData = createDraggableData(state, args.scale, coreData)\n\n    const newState = {\n      x: uiData.x,\n      y: uiData.y,\n    }\n\n    // Short-circuit if user's callback killed it.\n    const shouldUpdate = args.onDrag(e, uiData)\n    if (shouldUpdate === false) return false\n\n    setState((prev) => ({\n      ...prev,\n      ...newState,\n    }))\n  }\n\n  function onDragStop(e: MouseEvent, coreData: DraggableData) {\n    if (!state.dragging) return\n\n    // Shourt-circuit if user's callback killed it.\n    const shouldContinue = args.onStop(e, createDraggableData(state, args.scale, coreData))\n    if (shouldContinue === false) return false\n\n    const newState: {\n      dragging: boolean\n      x?: number\n      y?: number\n    } = {\n      dragging: false,\n    }\n\n    // TODO: since default props, wether draggable set position or not, this will always be controlled component\n    // If this is a controlled component, the result of this operation will be to\n    // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n    const controlled = Boolean(props.position !== undefined)\n    if (controlled) {\n      const { x, y } = args.position\n      newState.x = x\n      newState.y = y\n    }\n\n    setState((prev) => ({\n      ...prev,\n      ...newState,\n    }))\n  }\n\n  // TODO: since default props, wether draggable set position or defaultposition or not, this will always be controlled component\n  // If this is controlled, we don't want to move it -- unless it's dragging.\n  const controlled = Boolean(props.position !== undefined)\n  const draggable = !controlled || state.dragging\n  let validPosition = props.position || props.defaultPosition\n  if (validPosition === undefined) validPosition = args.position\n\n  const transformOpts = {\n    // props when draggable only horizontally or vertically\n    x: canDragX(args.axis) && draggable ? state.x : validPosition.x,\n    y: canDragY(args.axis) && draggable ? state.y : validPosition.y,\n  }\n\n  const style = createCSSTransform(transformOpts, args.positionOffset)\n\n  // Mark w/ class while dragging\n  let className = args.defaultClassName\n  if (state.dragging) className += ' ' + args.defaultClassNameDragging\n  if (state.dragged) className += ' ' + args.defaultClassNameDragged\n  if (args.children.props.className) className += ' ' + args.children.props.className\n\n  return (\n    <DraggableCore onStart={onDragStart} onDrag={onDrag} onStop={onDragStop} forwardedRef={args.forwardedRef}>\n      {React.cloneElement(React.Children.only(args.children), {\n        className: className,\n        style: { ...args.children.props.style, ...style },\n      })}\n    </DraggableCore>\n  )\n}\n","import React from 'react'\nimport { cancellablePromiseObj, cancellablePromise } from '../utils/cancellablePromise'\n\n// const noop = () => {};\nconst delay = (n: number) => new Promise((resolve) => setTimeout(resolve, n))\n\nexport function useClickPreventionOnDoubleClick(onClick: () => void, onDoubleClick: () => void) {\n  const api = useCancellablePromises()\n\n  const handleClick = () => {\n    api.clearPendingPromise()\n    const waitForClick = cancellablePromise(delay(300))\n    api.appendPendingPromise(waitForClick)\n\n    return waitForClick.promise\n      .then(() => {\n        api.removePendingPromise(waitForClick)\n        onClick()\n      })\n      .catch((errInfo) => {\n        api.removePendingPromise(waitForClick)\n        if (!errInfo.isCanceled) throw errInfo.error\n      })\n  }\n\n  const handleDoubleClick = () => {\n    api.clearPendingPromise()\n    onDoubleClick()\n  }\n\n  return [handleClick, handleDoubleClick]\n}\n\nfunction useCancellablePromises() {\n  const pendingPromises = React.useRef([] as cancellablePromiseObj[])\n\n  const appendPendingPromise = (promise: cancellablePromiseObj) => {\n    pendingPromises.current = [...pendingPromises.current, promise]\n  }\n\n  const removePendingPromise = (promise: cancellablePromiseObj) => {\n    pendingPromises.current = pendingPromises.current.filter((p) => p !== promise)\n  }\n\n  const clearPendingPromise = () => pendingPromises.current.map((p) => p.cancel())\n\n  const api = {\n    appendPendingPromise,\n    removePendingPromise,\n    clearPendingPromise,\n  }\n  return api\n}\n","export type cancellablePromiseObj = {\n  promise: Promise<unknown>\n  cancel: () => boolean\n}\n\nexport const cancellablePromise = (promise: Promise<unknown>): cancellablePromiseObj => {\n  let isCanceled = false\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      (value) => (isCanceled ? reject({ isCanceled, value }) : resolve(value)),\n      (error) => reject({ isCanceled, error }),\n    )\n  })\n\n  return {\n    promise: wrappedPromise,\n    cancel: () => (isCanceled = true),\n  }\n}\n","import React, { useContext, useState, useRef, ReactElement } from 'react'\nimport { DagContext } from '../contexts/DagContext'\nimport { useClickPreventionOnDoubleClick } from '../hooks/useCancellablePromises'\n\ntype RenameProps = {\n  initName: string\n  children: ReactElement\n}\n\nfunction Rename({ initName, children }: RenameProps) {\n  const [dag, setDag] = useContext(DagContext)\n  const [value, setValue] = useState(dag.vertices[initName].value ?? initName)\n  const formInputField = useRef<HTMLInputElement>(null)\n  const onClick = () => {}\n  const onDoubleClick = () => {\n    if (formInputField.current) {\n      formInputField.current.focus()\n      formInputField.current.setSelectionRange(0, value.length)\n    }\n  }\n  const [handleClick, handleDoubleClick] = useClickPreventionOnDoubleClick(onClick, onDoubleClick)\n\n  function submitHandler(e: React.FormEvent) {\n    e.preventDefault()\n    setDag.appendVertexValue(initName, value)\n    if (formInputField.current) formInputField.current.blur()\n  }\n\n  function preventSelect(e: React.MouseEvent) {\n    e.preventDefault()\n  }\n\n  return (\n    <div style={{ height: '100%', width: '100%' }} onClick={handleClick} onDoubleClick={handleDoubleClick}>\n      <form onSubmit={submitHandler}>\n        <input\n          ref={formInputField}\n          type=\"text\"\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          onMouseDown={(e) => preventSelect(e)}\n        ></input>\n      </form>\n      {children}\n    </div>\n  )\n}\n\nexport default Rename\n","import { useEffect, useState } from 'react'\nimport * as S from './styles'\nimport Draggable from '../Draggble/Draggable'\nimport { DraggableData } from '../Draggble/types'\nimport { arrowStyle, RefsArrows } from '../../ts/types/app_types'\nimport { useDrawConnectorDynamic } from '../hooks/useDrawSVGConnector'\nimport Rename from './Rename'\n\nexport default function Vertex(props: {\n  name: string\n  arrowStyleOpt: arrowStyle\n  location: [number, number]\n  forwardedRef: React.RefObject<HTMLDivElement>\n  forwardedArrowsRefs: RefsArrows\n}) {\n  const { name, arrowStyleOpt, location, forwardedRef, forwardedArrowsRefs } = props\n  const [row, column] = location\n  const [topPosition, leftPosition] = [150 + 150 * row, 150 * column]\n  const [topStyle, leftStyle] = [topPosition + 'px', leftPosition + 'px']\n  const [state, setState] = useState({\n    activeDrags: 0,\n    deltaPosition: { x: 0, y: 0 },\n    controlledPosition: { x: -400, y: 200 }, //TODO\n  })\n  const { drawConnectorDynamic } = useDrawConnectorDynamic(arrowStyleOpt)\n  const relatedArrows = relatedArrowsDetector(forwardedArrowsRefs, name)\n\n  const handleDrag = (e: MouseEvent, ui: DraggableData) => {\n    const { x, y } = state.deltaPosition\n    setState((prev) => ({\n      ...prev,\n      deltaPosition: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      },\n    }))\n    drawConnectorDynamic(relatedArrows, name, { x: ui.deltaX, y: ui.deltaY })\n  }\n  const onStart = () => setState((prev) => ({ ...prev, activeDrags: state.activeDrags + 1 }))\n  const onStop = () => setState((prev) => ({ ...prev, activeDrags: state.activeDrags - 1 }))\n\n  const dragHandlers = { onStart: onStart, onStop: onStop }\n\n  let posn = {\n    position: `absolute`,\n    // top: `${topStyle}`,\n    // left: `${leftStyle}`,\n  }\n\n  useEffect(() => {\n    //console.log(forwardedRef);\n  })\n\n  return (\n    <>\n      <Draggable\n        {...dragHandlers}\n        onDrag={handleDrag}\n        forwardedRef={forwardedRef}\n        positionOffset={{ x: '0%', y: '0%' }}\n        defaultPosition={{ x: leftPosition, y: topPosition }}\n        defaultClassName={`draggable-${name}`}\n      >\n        <S.Container posn={posn} ref={forwardedRef} id={name}>\n          <Rename initName={name}>\n            <>\n              <span> {name} </span>\n              <br />\n              {/* {`x: ${state.deltaPosition.x.toFixed(0)}, y: ${state.deltaPosition.y.toFixed(0)}`} */}\n            </>\n          </Rename>\n        </S.Container>\n      </Draggable>\n    </>\n  )\n}\n\n// 不能 Hoist 到 vertex 以上的層級，因為要等 arrow 畫出來才有辦法存取到  arrows refs\nfunction relatedArrowsDetector(forwardedArrowsRefs: RefsArrows, vertexName: string) {\n  let relatedArrows: RefsArrows = forwardedArrowsRefs.filter((arrow) => {\n    if (!arrow.current) return // initial render, ref would not access dom\n    const pathEle = arrow.current\n    return (\n      pathEle &&\n      (pathEle.getAttribute('data-vertex_from') === vertexName || pathEle.getAttribute('data-vertex_to') === vertexName)\n    )\n  })\n  return relatedArrows\n}\n","import { IdagData } from '../dag/types'\nimport { arrowStyle, RefsArrows, RefsDiv } from '../ts/types/app_types'\n\nimport Vertex from './Vertex/Vertex'\n\ntype vertexRendererParas = {\n  dag: IdagData\n  refs: [React.MutableRefObject<RefsDiv>, React.MutableRefObject<RefsArrows>] // [...{current: [..., {current: Ele} ]}]\n  arrowStyleOpt: arrowStyle\n}\n\nexport default function vertexRenderer({ dag, refs, arrowStyleOpt }: vertexRendererParas) {\n  const [rank, topSorted] = [dag.rank, dag.topSorted]\n  if (!rank || !topSorted) return\n  const graphHeight = rank[`${topSorted[0]}`]\n  const rowProcssedTimes: { [key: number]: number } = {} //作為每一行div是否render過的計數器\n  const [refsDivs, refsArrows] = refs\n\n  return (\n    // 按照拓墣排序迭代每個 vertex，同時紀錄他們所在階層 currentRow\n    topSorted.map((name, i) => {\n      let row = graphHeight - rank[name] // 代表該 vertex name 在第幾行\n      rowProcssedTimes[row] = rowProcssedTimes[row] + 1 || 1 // Record to kwow current vertex is in n'th column\n      let column = rowProcssedTimes[row]\n\n      return (\n        <Vertex\n          name={name}\n          arrowStyleOpt={arrowStyleOpt}\n          key={name}\n          location={[row, column]}\n          forwardedRef={refsDivs.current[i]}\n          forwardedArrowsRefs={refsArrows.current}\n        />\n      )\n    })\n  )\n}\n","import styled from 'styled-components'\n\nconst dropDownHeight = '4'\nconst optionsHeight = '10'\nconst unit = 'rem'\n\nexport const Dropdown = styled.div`\n  color: ${({ theme }) => theme.text};\n  border: solid;\n  border-radius: 5px;\n  height: ${dropDownHeight + unit};\n  width: 8rem;\n  position: absolute;\n  left: 1rem;\n  bottom: 1rem;\n  /* glassmorphism */\n  background: ${({ theme }) => theme.select};\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4px);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  p {\n    padding: 1.3rem;\n  }\n\n  .options {\n    position: absolute;\n    top: -${optionsHeight + unit};\n    height: ${optionsHeight + unit};\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    div {\n      background-color: ${({ theme }) => theme.option};\n      /* glassmorphism */\n      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n      backdrop-filter: blur(4px);\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.18);\n      margin: 0.5rem;\n\n      &:hover {\n        transform: translate(-0.2rem, -0.2rem);\n      }\n\n      &.option-mouse-down {\n        transform: scale(0.95);\n      }\n\n      /* TODO: svg path not align with viewpoint */\n      svg {\n        marker#arrowhead {\n          fill: ${({ theme }) => theme.text};\n        }\n\n        & g {\n          stroke: ${({ theme }) => theme.text};\n        }\n      }\n    }\n  }\n\n  .collapseAria {\n    transform: translateX(-2rem);\n    width: 0;\n    opacity: 0;\n    transition-property: width, opacity, transform;\n    transition-duration: 0.5s, 0.5s, 0.5s;\n    transition-timing-function: linear, ease-out, linear;\n  }\n\n  .expandAria {\n    transform: translateX(0);\n    width: 25vw;\n    opacity: 1;\n    transition-property: width, opacity, transform;\n    transition-duration: 0.5s, 1s, 0.5s;\n    transition-timing-function: linear, ease-in, linear;\n  }\n`\n","import React, { useState, useRef } from 'react'\nimport { arrowStyle } from '../../ts/types/app_types'\nimport * as S from './style'\n\ntype selectArrowStyleProps = {\n  styleOpt: arrowStyle\n  setStyleOpt: React.Dispatch<React.SetStateAction<arrowStyle>>\n}\n\nfunction SelectArrowStyle({ styleOpt, setStyleOpt }: selectArrowStyleProps) {\n  //TODO: svg path not alignt with window viewpoint\n  const [showOptions, setShowOptions] = useState(false)\n\n  const mouseDownEffect = (e: React.MouseEvent) => {\n    const option = e.currentTarget\n    option.classList.add('option-mouse-down')\n  }\n\n  const mouseUpEffect = (e: React.MouseEvent) => {\n    const option = e.currentTarget\n    if (option.classList.contains('option-mouse-down')) {\n      option.classList.remove('option-mouse-down')\n    }\n  }\n\n  return (\n    <>\n      <S.Dropdown onMouseEnter={() => setShowOptions(true)} onMouseLeave={() => setShowOptions(false)}>\n        <p> Arrow style </p>\n        <div className={`options ${showOptions ? 'expandAria' : 'collapseAria'}`} data-aria-expend={showOptions}>\n          <div\n            onClick={() => setStyleOpt('CURVE')}\n            onMouseDown={(e) => mouseDownEffect(e)}\n            onMouseUp={(e) => mouseUpEffect(e)}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\n              <defs>\n                <marker\n                  id=\"arrowhead\"\n                  viewBox=\"0 0 10 10\"\n                  refX=\"3\"\n                  refY=\"5\"\n                  markerWidth=\"6\"\n                  markerHeight=\"6\"\n                  orient=\"auto\"\n                >\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n                </marker>\n              </defs>\n              <g fill=\"none\" stroke=\"black\" strokeWidth=\"2\" markerEnd=\"url(#arrowhead)\">\n                <path d=\"M80,20 C15,20 15,120 80,120\" />\n              </g>\n            </svg>\n          </div>\n          <div\n            onClick={() => setStyleOpt('STRAIGHT')}\n            onMouseDown={(e) => mouseDownEffect(e)}\n            onMouseUp={(e) => mouseUpEffect(e)}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\n              <defs>\n                <marker\n                  id=\"arrowhead\"\n                  viewBox=\"0 0 10 10\"\n                  refX=\"3\"\n                  refY=\"5\"\n                  markerWidth=\"6\"\n                  markerHeight=\"6\"\n                  orient=\"auto\"\n                >\n                  <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n                </marker>\n              </defs>\n              <g fill=\"none\" stroke=\"black\" strokeWidth=\"2\" markerEnd=\"url(#arrowhead)\">\n                <path d=\"M65,20 65,115\" />\n              </g>\n            </svg>\n          </div>\n        </div>\n      </S.Dropdown>\n    </>\n  )\n}\n\nexport default SelectArrowStyle\n","import React, { useRef, useContext, useState } from 'react'\nimport { IdagData } from '../dag/types'\nimport { RefsArrows, RefsDiv } from '../ts/types/app_types'\nimport { PositionContext } from './contexts/PositionContext'\nimport arrowRenderer from './ArrowRenderer'\nimport vertexRenderer from './VertexRenderer'\nimport arrowsInfoGetter from './utils/arrowsInfoGetter'\nimport SelectArrowStyle from './SelectArrowStyle/SelectArrowStyle'\nimport { arrowStyle } from '../ts/types/app_types'\ntype DrawGraphProps = {\n  dag: IdagData\n  topSorted: string[]\n}\n\n/**\n *  View on DAG.\n *   1. Map vertices to each UI of each\n *   2. Define position based on topology sort order\n *   3. Select to define svg arrows style\n */\nexport default function DrawGraph({ dag, topSorted }: DrawGraphProps) {\n  const [positionMap, setPositionMap] = useContext(PositionContext)\n  let [arrowsMap, arrowsNumber] = arrowsInfoGetter(dag)\n\n  const refsDivs = useRef<RefsDiv>([])\n  const refsArrows = useRef<RefsArrows>([])\n  refsDivs.current = [...new Array(topSorted.length)].map(() => React.createRef())\n  refsArrows.current = [...new Array(arrowsNumber)].map(() => React.createRef())\n\n  const [arrowStyleOpt, setArrowStyleOpt] = useState<arrowStyle>('CURVE')\n  /** test block */\n  // useEffect(() => {\n  //   setPositionMap({\n  //     \"test\": {\n  //       posnOrigin: [2, 5],\n  //       posnNew: [4, 5],\n  //       translate: { x: 4, y: 3 }\n  //     }\n  //   })\n  // }, [])\n\n  return (\n    <>\n      <p className=\"instructions\">\n        Drag items\n        <br />\n        Double click items to change title / name\n      </p>\n      <div className=\"graph-wrapper\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\n          <defs>\n            <marker id=\"arrowhead\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto\">\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n            </marker>\n          </defs>\n          {arrowRenderer({ dag, refs: [refsDivs, refsArrows], arrowStyleOpt })}\n        </svg>\n        {vertexRenderer({\n          dag,\n          refs: [refsDivs, refsArrows],\n          arrowStyleOpt,\n        })}\n      </div>\n      <SelectArrowStyle styleOpt={arrowStyleOpt} setStyleOpt={setArrowStyleOpt} />\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n  width: 8rem;\n  position: absolute;\n  right: 300px;\n  bottom: 2rem;\n\n  label {\n    color: ${({ theme }) => theme.text};\n  }\n\n  input {\n    color: ${({ theme }) => theme.text};\n    width: 8rem;\n    height: 1.5rem;\n    font-size: 1.08rem;\n    text-align: center;\n\n    /* glassmorphism */\n    background: ${({ theme }) => theme.select};\n    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n    backdrop-filter: blur(4px);\n    border-radius: 4px;\n    border: 1px solid rgba(255, 255, 255, 0.18);\n\n    &::placeholder {\n      color: ${({ theme }) => theme.text};\n      opacity: 0.5;\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport * as S from './style'\n\ntype DeleteVertexProps = {\n  deleteVertex: (target: string) => void\n}\n\nfunction DeleteVertex({ deleteVertex }: DeleteVertexProps) {\n  const [target, setTarget] = useState('')\n\n  function submitHandler(e: React.FormEvent) {\n    e.preventDefault()\n    deleteVertex(target)\n    setTarget('')\n  }\n\n  return (\n    <S.Form onSubmit={submitHandler}>\n      <label> Delete by tag : </label>\n      <input\n        name=\"vertex\"\n        value={target}\n        placeholder=\"👉 a\"\n        onChange={(e) => {\n          setTarget(e.target.value)\n        }}\n      />\n    </S.Form>\n  )\n}\n\nexport default DeleteVertex\n","import styled from 'styled-components'\n\nexport const Vertex_input = styled.div`\n  position: fixed;\n  right: 2rem;\n  bottom: 2rem;\n  padding: 1.5rem;\n\n  /* glassmorphism */\n  background: ${({ theme }) => theme.select};\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(8px);\n  border-radius: 4px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n`\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.text};\n\n  label {\n    width: 10rem;\n  }\n\n  input {\n    color: ${({ theme }) => theme.text};\n    width: 10rem;\n    height: 1.5rem;\n    font-size: 1.08rem;\n    text-align: center;\n    margin: 0 0 1rem 0;\n\n    /* glassmorphism -- upper layer*/\n    background: ${({ theme }) => theme.select};\n    border-radius: 4px;\n    border: 1px solid rgba(255, 255, 255, 0.18);\n\n    &::placeholder {\n      color: ${({ theme }) => theme.text};\n      opacity: 0.5;\n    }\n  }\n`\n\nexport const Button = styled.button`\n  margin-top: 0.5rem;\n  padding: 5px 0 5px 0;\n  font-size: 1.3rem;\n  width: 10rem;\n\n  /* glassmorphism -- upper layer*/\n  background: ${({ theme }) => theme.button};\n  border-radius: 4px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n\n  color: ${({ theme }) => theme.text};\n\n  &.btn-mouse-down {\n    transform: scale(0.95);\n  }\n`\n","import React, { useState, useContext } from 'react'\nimport { input } from '../../ts/types/app_types'\nimport * as S from './styles'\n\ntype VertexInputProps = {\n  createVertex: ({}: input) => boolean\n}\n\nexport default function VertexInput({ createVertex }: VertexInputProps) {\n  const [vertex, setVertex] = useState('')\n  const [incomming, setIncomming] = useState('')\n  const [outgoing, setOutgoing] = useState('')\n\n  function submitHandler(e: React.FormEvent) {\n    e.preventDefault()\n    const success = createVertex({\n      vertex: vertex,\n      incomming: incomming,\n      outgoing: outgoing,\n    })\n    if (!success) return\n\n    setVertex('')\n    setIncomming('')\n    setOutgoing('')\n  }\n\n  const mouseDownEffect = (e: React.MouseEvent) => {\n    const btn = e.currentTarget\n    btn.classList.add('btn-mouse-down')\n  }\n\n  const mouseUpEffect = (e: React.MouseEvent) => {\n    const btn = e.currentTarget\n    if (btn.classList.contains('btn-mouse-down')) {\n      btn.classList.remove('btn-mouse-down')\n    }\n  }\n\n  return (\n    <>\n      <S.Vertex_input>\n        <S.Form onSubmit={submitHandler}>\n          <label>Incomming Note Tag</label>\n          <input\n            name=\"incomming\"\n            placeholder=\"👉 a, b, c ...\"\n            value={incomming}\n            onChange={(e) => {\n              setIncomming(e.target.value)\n            }}\n          />\n\n          <label>Tag Name</label>\n          <input\n            name=\"vertex\"\n            value={vertex}\n            placeholder=\"👉 d (must)\"\n            onChange={(e) => {\n              setVertex(e.target.value)\n            }}\n          />\n\n          <label>Outgoing Note Tag</label>\n          <input\n            name=\"outgoing\"\n            value={outgoing}\n            placeholder=\"👉 e, f, g ...\"\n            onChange={(e) => {\n              setOutgoing(e.target.value)\n            }}\n          />\n\n          <S.Button onMouseDown={(e) => mouseDownEffect(e)} onMouseUp={(e) => mouseUpEffect(e)}>\n            Create !\n          </S.Button>\n        </S.Form>\n      </S.Vertex_input>\n    </>\n  )\n}\n","import styled from 'styled-components'\n\ninterface Itip {\n  show: boolean\n}\n\nexport const Icon = styled.span`\n  position: absolute;\n  right: 450px;\n  bottom: 2rem;\n  width: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  opacity: 0.7;\n\n  &.clicked {\n    transform: translate(2px, 2px);\n    transition: all 0.1s linear;\n    opacity: 1;\n  }\n\n  svg {\n    color: ${({ theme }) => theme.text};\n  }\n`\n\nexport const toolTip = styled.div<Itip>`\n  position: absolute;\n  right: 50rem;\n  bottom: 10rem;\n  color: ${({ theme }) => theme.text};\n  & > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: absolute;\n    width: 30rem;\n    opacity: ${(props) => (props.show ? `1` : `0`)};\n    border: solid 1px;\n    border-radius: 12px;\n    padding: 12px 0 12px 0;\n\n    /*\n      To Prevent user selectin inside the drag source\n      */\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n  }\n`\n","import React, { useState } from 'react'\nimport * as S from './style'\nimport { FaTrash } from 'react-icons/fa'\n\ntype ResetDagProps = {\n  reset: () => void\n}\n\nfunction ResetDag(props: ResetDagProps) {\n  const { reset } = props\n  const [showTip, setShowTip] = useState(false)\n\n  function mouseDownHandler(e: React.MouseEvent) {\n    const icon = e.currentTarget\n    icon.classList.add('clicked')\n  }\n\n  function mouseUpHandler(e: React.MouseEvent) {\n    const icon = e.currentTarget\n    if (icon.classList.contains('clicked')) {\n      icon.classList.remove('clicked')\n    }\n    reset()\n  }\n\n  return (\n    <>\n      <S.Icon\n        onMouseDown={(e) => mouseDownHandler(e)}\n        onMouseUp={(e) => mouseUpHandler(e)}\n        onMouseEnter={() => setShowTip(true)}\n        onMouseLeave={() => setShowTip(false)}\n      >\n        <FaTrash size={2} style={{ height: '45px', width: '45px' }} />\n      </S.Icon>\n      <S.toolTip show={showTip}>\n        <div>\n          {showTip ? (\n            <div>\n              We use local storage to keep data between sessions.\n              <br /> Click me to delete all storage before creating new graph !\n            </div>\n          ) : null}\n        </div>\n      </S.toolTip>\n    </>\n  )\n}\n\nexport default ResetDag\n","import { useContext } from 'react'\nimport { DagContext } from './contexts/DagContext'\nimport DrawGraph from './DrawGraph'\nimport DeleteVertex from './DeleteVertex/DeleteVertex'\nimport VertexInput from './InputForm/VertexInput'\nimport ResetDag from './ResetDag/ResetDag'\n\nfunction GraphMiddleWare() {\n  const [dag, setDag] = useContext(DagContext)\n\n  return (\n    <>\n      {/* View on DAG  */}\n      <DrawGraph dag={dag} topSorted={dag.topSorted} />\n\n      {/* Controllers on DAG */}\n      <VertexInput createVertex={setDag.createVertex} />\n      <DeleteVertex deleteVertex={setDag.deleteVertex} />\n      <ResetDag reset={setDag.resetDag} />\n    </>\n  )\n}\n\nexport default GraphMiddleWare\n","import TogglerButton from './components/TogglerButton/ToggleButton'\nimport GlobalStyle from './components/styles/global'\nimport ThemeContext from './components/contexts/ThemeContext'\nimport { useThemeMode } from './components/hooks/useThemeMode'\n\nimport { PositionContextProvider } from './components/contexts/PositionContext'\nimport { DagContextProvider } from './components/contexts/DagContext'\n\nimport GraphMiddleWare from './components/GraphMiddleWare'\nimport { useDagStorage } from './components/hooks/useDagStorage'\n\nimport { FaGithub } from 'react-icons/fa'\n\nfunction App() {\n  const { theme, themeToggler } = useThemeMode()\n  const { dagStorage, setlocalStorage } = useDagStorage()\n\n  return (\n    <ThemeContext theme={theme}>\n      <GlobalStyle />\n      <div className=\"toggler\">\n        <TogglerButton themeToggler={themeToggler} />\n        <div>\n          <h1>{theme}</h1>\n        </div>\n        <a\n          title=\"repo URL\"\n          href=\"https://github.com/benson00077/dag_graph-ts\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <FaGithub style={{ height: '25px', width: '25px', opacity: '0.5' }}></FaGithub>\n        </a>\n      </div>\n\n      <DagContextProvider setlocalStorage={setlocalStorage}>\n        <PositionContextProvider>\n          <GraphMiddleWare />\n        </PositionContextProvider>\n      </DagContextProvider>\n    </ThemeContext>\n  )\n}\n\nexport default App\n","import { useEffect, useState } from 'react'\n\nexport const useThemeMode = () => {\n  const [theme, setTheme] = useState('dark')\n\n  const setMode = (mode: string) => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  }\n\n  const themeToggler = () => (theme === 'dark' ? setMode('light') : setMode('dark'))\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme') // could be null\n    localTheme && setTheme(localTheme)\n  }, [])\n\n  return { theme, themeToggler }\n}\n","import { useEffect, useState } from 'react'\n\nexport const useDagStorage = () => {\n  const [dagStorage, setDagStorage] = useState('')\n\n  const setlocalStorage = (dagData: string) => {\n    window.localStorage.setItem('dagData', dagData)\n    setDagStorage(dagData)\n  }\n\n  useEffect(() => {\n    const localDagStorage = window.localStorage.getItem('dagData') // could be null\n    localDagStorage && setDagStorage(localDagStorage)\n  })\n\n  return { dagStorage, setlocalStorage }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}